openapi: 3.0.0
info:
  version: "1.0.0-oas3"
  title: Partags
  description: API of Parktags
  contact:
    name: Ceyentra Technologies (Pvt) Ltd.
    email: info@ceyetra.com
    url: 'http://ceyentra.com'
tags:
  - name: MobileUser
    description: operations about public user
  - name: Corporate
    description: operations about Corporate
  - name: User Adderss
    description: operations about User Adderss
  - name: Park Provider
    description: operations about Park Provider
  - name: Park Station
    description: operations about Park Station
  - name: Park Tag
    description: operations about Park Tag
  - name: Station Devices
    description: operations about Station Devices
  - name: Admin user
    description: operations about Admin user
  - name: Public user
    description: operations about Public user
  - name: Public user vehicles
    description: operations about Public user vehicles
security:
  - oAuth: []
paths:
  /mobile/user/:
    put:
      tags:
      - MobileUser
      summary: Initiate new user registration
      parameters:
        - in: header
          name: mobileNo
          schema:
            type: string
          required: true
        - in: header
          name: userId
          schema:
            type: integer
          required: true
        - in: header
          name: tokenNo
          schema:
            type: integer
          required: true
      security: []
      requestBody:
          $ref: '#/components/requestBodies/RegisterMobileUser'
      responses:
        '200':
          $ref: '#/components/responses/DefaultSuccessResponse'
        '400':
          $ref: '#/components/responses/DefaultErrorResponse'

    post:
      tags:
      - MobileUser
      summary: Update user profile
      parameters:
        - in: header
          name: device-Id
          schema:
            type: string
          required: true
      security: []
      requestBody:
          $ref: '#/components/requestBodies/RegisterMobileUser'
      responses:
        '200':
          $ref: '#/components/responses/DefaultSuccessResponse'
        '400':
          $ref: '#/components/responses/DefaultErrorResponse'


  /mobile/user/validate:
    post:
      tags:
        - MobileUser
      summary: Complete User Registration with auth code
      parameters:
        - in: header
          name: mobileNo
          schema:
            type: string
          required: true
        - in: header
          name: userId
          schema:
            type: integer
          required: true
        - in: header
          name: tokenNo
          schema:
            type: string
          required: true
      security: []
      responses:
        '200':
          $ref: '#/components/responses/DefaultSuccessResponse'
        '400':
          $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/user/sendAuth/{mobileNo}:
    post:
      tags:
        - MobileUser
      summary: Send OTP to customer when login
      parameters:
        - in: path
          name: mobileNo
          schema:
            type: string
          required: true
        - in: header
          name: userId
          schema:
            type: integer
          required: true
        - in: header
          name: device-Id
          schema:
            type: string
          required: true
      security: []
      responses:
        '200':
          $ref: '#/components/responses/DefaultSuccessResponse'
        '400':
          $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/user/validate/{mobileNo}:
    post:
      tags:
        - MobileUser
      summary: Complete User login with auth code
      parameters:
        - in: path
          name: mobileNo
          schema:
            type: string
          required: true
        - in: header
          name: device-Id
          schema:
            type: string
          required: true
      security: []
      responses:
        '200':
          $ref: '#/components/responses/RegisterValidateAuthCodeResponse'

  /mobile/user/{userId}:
    get:
      tags:
        - MobileUser
      summary: Get user profile details
      parameters:
        - in: path
          name: userId
          schema:
            type: number
            description: Unique id of the user
          required: true
      responses:
        '200':
          $ref: '#/components/requestBodies/RegisterMobileUser'
        '500':
          $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/user/EmergencyContact/add:
    put:
      tags:
      - MobileUser
      summary: Add new emergency contact for user
      security: []
      requestBody:
          $ref: '#/components/requestBodies/EmergencyContactBody'
      responses:
        '200':
          $ref: '#/components/responses/DefaultSuccessResponse'
        '400':
          $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/user/EmergencyContact/get/{userId}:
    get:
      tags:
        - MobileUser
      summary: Get user emergency contact details
      parameters:
        - in: path
          name: userId
          schema:
            type: number
            description: Unique id of the public user
          required: true
      responses:
        '200':
          $ref: '#/components/requestBodies/EmergencyContactBody'
        '400':
          $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/user/EmergencyContact/update:
    post:
      tags:
      - MobileUser
      summary: Update emergency contact of the user
      security: []
      requestBody:
          $ref: '#/components/requestBodies/EmergencyContactBody'
      responses:
        '200':
          $ref: '#/components/responses/DefaultSuccessResponse'
        '400':
          $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/user/checkversion:
    post:
      tags:
      - MobileUser
      summary: Checks the current version of the app and sends relevent description
      security: []
      requestBody:
          $ref: '#/components/requestBodies/AppVersionBody'
      responses:
        '200':
          description: Operation Successful response 303-"A newer version of ParkTags is available in Google Play Store. Please update to enjoy an uninterrupted service!"   302-"A newer version of ParkTags is available in Google Play Store. Please update to enjoy an uninterrupted service!"   301-"A newer version of ParkTags is available in Google Play Store. Please update to enjoy an uninterrupted service!"  300-"You are up to date!"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultSuccess'
              example:
                status: 300
                statusDesc: You are up to date!

        '400':
          $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/user/getCorporateByUser/{userId}:
    get:
      tags:
        - MobileUser
      summary: Get Corporate details of the user
      parameters:
        - in: path
          name: userId
          schema:
            type: number
            description: Unique id of the public user
          required: true
      responses:
        '200':
          $ref: '#/components/requestBodies/CorporateBody'
        '400':
          $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/user/address/{userId}:
        put:
          tags:
          - User Adderss
          summary: Add Address to User
          parameters:
            - in: path
              name: userId
              schema:
                type: string
              required: true
            - in: header
              name: device-Id
              schema:
                type: string
              required: true
          security: []
          requestBody:
              $ref: '#/components/requestBodies/UserAddressRequest'
          responses:
            '201':
              $ref: '#/components/responses/DefaultSuccessResponse'
            '400':
              $ref: '#/components/responses/DefaultErrorResponse'

        post:
              tags:
              - User Adderss
              summary: Update Address of the User
              parameters:
                - in: path
                  name: userId
                  schema:
                    type: string
                  required: true
                - in: header
                  name: device-Id
                  schema:
                    type: string
                  required: true
              security: []
              requestBody:
                  $ref: '#/components/requestBodies/UserAddressRequest'
              responses:
                '200':
                  $ref: '#/components/responses/DefaultSuccessResponse'
                '400':
                  $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/user/address/{userId}/{addressId}:
        delete:
            tags:
            - User Adderss
            summary: delete Address of the User
            parameters:
                    - in: path
                      name: userId
                      schema:
                        type: string
                      required: true
                    - in: path
                      name: addressId
                      schema:
                        type: string
                      required: true
                    - in: header
                      name: device-Id
                      schema:
                        type: string
                      required: true
            security: []

            responses:
                    '200':
                      $ref: '#/components/responses/DefaultSuccessResponse'
                    '400':
                      $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/user/address/view:
      get:
        tags:
        - User Adderss
        summary: get Address of the User
        parameters:
          - in: header
            name: userId
            schema:
              type: integer
            required: true
        security: []
        responses:
            '200':
              description: addresses of the corporate user
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserAddressBody'
                    example: {
                        address: [{
                            userId: 23,
                            addressId: 25,
                            addressType: "Single",
                            line1: "nalluruwa",
                            line2: "bodhirukkarama road",
                            city: "panadura",
                            district: "kalutara",
                            province: "western",
                            postalCode: "D323",
                            country: "sri lanka"
                        }]
                    }
            '400':
              $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/user/address/getAddress:
        get:
          tags:
          - User Adderss
          summary: get Address of the User
          parameters:
            - in: header
              name: userId
              schema:
                type: integer
              required: true
          security: []
          responses:
              '200':
                description: addresses of the corporate user
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: '#/components/schemas/UserAddressBody'
                      example: [{
                                 userId: 23,
                                 addressId: 25,
                                 addressType: "Single",
                                 line1: "nalluruwa",
                                 line2: "bodhirukkarama road",
                                 city: "panadura",
                                 district: "kalutara",
                                 province: "western",
                                 postalCode: "D323",
                                 country: "sri lanka"
                              }]
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/corporate/:
          put:
            tags:
            - Corporate
            summary: Add new corporate
            parameters:
              - in: header
                name: smart-session-key
                schema:
                  type: string
                required: true
              - in: header
                name: userName
                schema:
                  type: string
                required: true
            security: []
            requestBody:
                $ref: '#/components/requestBodies/CorporateBody'
            responses:
              '201':
                $ref: '#/components/responses/DefaultSuccessResponse'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

          post:
            tags:
            - Corporate
            summary: Update the corporate
            parameters:
              - in: header
                name: smart-session-key
                schema:
                  type: string
                required: true
              - in: header
                name: userName
                schema:
                  type: string
                required: true
            security: []
            requestBody:
                $ref: '#/components/requestBodies/CorporateBody'
            responses:
              '201':
                $ref: '#/components/responses/DefaultSuccessResponse'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'
          get:
            tags:
            - Corporate
            summary: Get All Corporates
            parameters:
              - in: header
                name: smart-session-key
                schema:
                  type: string
                required: true
              - in: header
                name: userName
                schema:
                  type: string
                required: true
            security: []
            responses:
              '200':
                description: all corporates
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: '#/components/schemas/CorporateBody'
                      example: {
                                  content:[{

                                    corporateId: 12,
                                    corporateCode: "C002",
                                    corporateName: "Dialog axiata",
                                    address: [{
                                      addressId: 21,
                                      addressLine1: "No. 40",
                                      addressLine2: "Nalluruwa",
                                      district: "panadura",
                                      state: "western",
                                      postalCode: "23233",
                                      country: "sri lanka",
                                      addedBy: "admin",
                                      addedDate: "2019-01-01",
                                      modifyBy: "admin2",
                                      modifyDate: "2019-04-11",
                                    }],
                                    webAddress: "wwe.com",
                                    email: "ger@gmail.com",
                                    contactNo: "773289774",
                                    billingContact: "biller",
                                    billMobile: "773289774",
                                    billEmail: "bill@gmail.com",
                                    techContact: "techer",
                                    techEmail: "tech@msn.com",
                                    brc: "B22323",
                                    techMobile: "773289774",
                                    contractStart: "2019-04-11",
                                    contractEnd: "2020-04-11",
                                    status: 1,
                                    addedBy: "super-user",
                                    addedDate: "2019-04-11 21:00:12",
                                    modifyBy: "sadmin",
                                    modifyDate: "2019-04-11 21:00:12",
                                    photoPath: "https://parktags.net:8448/Parktagservices/download/photoName"

                              }]
                      }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/corporate/addresses/{corporateId}:
        get:
          tags:
          - Corporate
          summary: get Address of the Corporate
          parameters:
            - in: path
              name: corporateId
              schema:
                type: integer
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          security: []
          responses:
              '200':
                description: addresses of the corporate
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: '#/components/schemas/CorporateAddressBody'

              '400':
                $ref: '#/components/responses/DefaultErrorResponse'
  /web/corporate/station/:
        put:
          tags:
          - Corporate
          summary: Add Station to Corporate
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/CorporateStationBody'
          security: []
          responses:
              '200':
                $ref: '#/components/responses/DefaultSuccessResponse'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'
        post:
          tags:
          - Corporate
          summary: update Station of Corporate
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/CorporateStationBody'
          security: []
          responses:
              '200':
                $ref: '#/components/responses/DefaultSuccessResponse'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/corporate/station/{corporateId}:
        get:
          tags:
          - Corporate
          summary: Get station by corporate
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
            - in: path
              name: corporateId
              schema:
                type: number
              required: true
          security: []
          responses:
              '200':
                description: stations of the corporate
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: '#/components/schemas/CorporateStationBody'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/parking/provider/:
        put:
          tags:
          - Park Provider
          summary: Add new park provider
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/ParkProviderBody'
          security: []
          responses:
              '200':
                $ref: '#/components/responses/DefaultSuccessResponse'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'
        post:
          tags:
          - Park Provider
          summary: Update Park Provider
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/ParkProviderBody'
          security: []
          responses:
              '200':
                $ref: '#/components/responses/DefaultSuccessResponse'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'
        get:
          tags:
          - Park Provider
          summary: Get all Park Providers
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                description: All park providers list
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: '#/components/schemas/ParkProviderBody'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'
  /web/parking/provider/{providerId}:
        get:
          tags:
          - Park Provider
          summary: Search park provider
          parameters:
            - in: path
              name: providerId
              schema:
                type: integer
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          security: []
          responses:
              '200':
                description: Park provider
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ParkProviderBody'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/parking/station/:
        put:
          tags:
          - Park Station
          summary: Add new park station
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/StationBody'
          security: []
          responses:
              '200':
                $ref: '#/components/responses/DefaultSuccessResponse'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'
          example:

        post:
          tags:
          - Park Station
          summary: Update park station
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/StationBody'
          security: []
          responses:
              '200':
                $ref: '#/components/responses/DefaultSuccessResponse'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'
          example:

  /web/parking/stations/{providerId}:
        get:
          tags:
          - Park Station
          summary: Get park station by provider
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
            - in: path
              name: providerId
              schema:
                type: integer
              required: true

          security: []
          responses:
              '200':
                description: all stations of provider
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: '#/components/schemas/ParkStationBody'
                      example:
                        {
                            "content": [
                                {
                                    "stationId": 8,
                                    "stationCode": null,
                                    "stationName": null,
                                    "providerBRN": null,
                                    "address1": "Moratuwa",
                                    "address2": "vgefrg",
                                    "city": "Moratuwa",
                                    "district": "West",
                                    "postalCode": "3322",
                                    "country": "DZ",
                                    "webaddress": "http://wwe.com",
                                    "stationEmail": "bfdr@ngr",
                                    "stationMobile": "5435",
                                    "billContact": "45354",
                                    "billContactName": "tvfegt",
                                    "billContactEmail": "vfevge@fbt",
                                    "provideTchName": "Tech",
                                    "stationTechMobile": "232323",
                                    "stationTechEmail": "fgtrg@btgbe",
                                    "contractStart": "2009-02-11 11:13:38",
                                    "contractEnd": "2019-02-14 11:13:38",
                                    "operationHours": null,
                                    "unitPrice": 32323,
                                    "commission": 212,
                                    "providerId": 1,
                                    "latitude": 23,
                                    "longitude": 23,
                                    "status": 1,
                                    "addedBy": "admin",
                                    "addedDate": "2019-02-04 11:15:30",
                                    "modifyBy": null,
                                    "modifyDate": null,
                                    "availableSlots": 0,
                                    "providerName": "Test_Developer 1",
                                    "noOfSlots": 0,
                                    "noOfReserverd": 0,
                                    "noOfUsedSlots": 0,
                                    "noOfReserverdUsed": 0,
                                    "totalSlots": 0
                                },
                                {
                                    "stationId": 10,
                                    "stationCode": "33",
                                    "stationName": "Test",
                                    "providerBRN": null,
                                    "address1": "vfre",
                                    "address2": "vfe",
                                    "city": "vfd",
                                    "district": "vfe",
                                    "postalCode": "43243",
                                    "country": "BH",
                                    "webaddress": "http://wwe.com",
                                    "stationEmail": "fce@vfre",
                                    "stationMobile": "432",
                                    "billContact": "3441243",
                                    "billContactName": "bill",
                                    "billContactEmail": "bil@vfe",
                                    "provideTchName": "Tech",
                                    "stationTechMobile": "323424",
                                    "stationTechEmail": "bre@vfvr",
                                    "contractStart": "2000-05-12 15:01:22",
                                    "contractEnd": "2010-02-11 15:31:22",
                                    "operationHours": null,
                                    "unitPrice": 321212,
                                    "commission": 222,
                                    "providerId": 1,
                                    "latitude": 32,
                                    "longitude": 2,
                                    "status": 1,
                                    "addedBy": "admin",
                                    "addedDate": "2019-02-04 15:32:02",
                                    "modifyBy": null,
                                    "modifyDate": null,
                                    "availableSlots": 0,
                                    "providerName": "Test_Developer 1",
                                    "noOfSlots": 0,
                                    "noOfReserverd": 0,
                                    "noOfUsedSlots": 0,
                                    "noOfReserverdUsed": 0,
                                    "totalSlots": 0
                                }
                            ],
                            "last": true,
                            "totalElements": 2,
                            "totalPages": 1,
                            "size": 20,
                            "number": 0,
                            "sort": null,
                            "first": true,
                            "numberOfElements": 2
                        }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/parking/station/{stationId}:
        get:
          tags:
          - Park Station
          summary: search park station by station id
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
            - in: path
              name: stationId
              schema:
                type: integer
              required: true

          security: []
          responses:
              '200':
                description: park station by station id
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ParkStationBody'
                    example:
                      {
                          "stationId": 1,
                          "stationCode": "001",
                          "stationName": "3M Park",
                          "providerBRN": "PV003",
                          "address1": "Hedges Ct,",
                          "address2": "Colombo",
                          "city": "Colombo 10",
                          "district": "Colombo",
                          "postalCode": "01000",
                          "country": "LK",
                          "webaddress": "https://www.dialog.lk/",
                          "stationEmail": "rashinda.silva@dialog.lk",
                          "stationMobile": "0773337030",
                          "billContact": "0773337030",
                          "billContactName": "Rashinda Silva",
                          "billContactEmail": "rashinda.silva@dialog.lk",
                          "provideTchName": "Rashinda Silva",
                          "stationTechMobile": "0773337030",
                          "stationTechEmail": "rashinda.silva@dialog.lk",
                          "contractStart": "2017-07-23 23:29:32",
                          "contractEnd": "2018-07-23 23:29:32",
                          "operationHours": null,
                          "unitPrice": 100,
                          "commission": 10,
                          "providerId": 2,
                          "latitude": 6.921656,
                          "longitude": 79.864531,
                          "status": 1,
                          "addedBy": "pt_sadmin",
                          "addedDate": "2017-07-23 22:57:42",
                          "modifyBy": "pt_sadmin",
                          "modifyDate": "2017-08-23 17:59:33",
                          "availableSlots": 150,
                          "providerName": "Dialog Axiata",
                          "noOfSlots": 0,
                          "noOfReserverd": 0,
                          "noOfUsedSlots": 0,
                          "noOfReserverdUsed": 0,
                          "totalSlots": 0
                      }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/parking/station/level:
        put:
          tags:
          - Park Station
          summary: Add new park station level
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/StationLevelBody'
          security: []
          responses:
              '200':
                $ref: '#/components/responses/DefaultSuccessResponse'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'
        post:
          tags:
          - Park Station
          summary: Update park station level
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/StationLevelBody'
          security: []
          responses:
              '200':
                $ref: '#/components/responses/DefaultSuccessResponse'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/parking/station/level/{stationId}:
        get:
          tags:
          - Park Station
          summary: Get station levels by station
          parameters:
            - in: path
              name: stationId
              schema:
                type: number
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          security: []
          responses:
              '200':
                description: park station levels by station id
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/StationLevelBody'
                    example: [
                        {
                            "levelid": 7,
                            "levelName": "Ground Level",
                            "parallel": 10,
                            "angle": 5,
                            "accessible": 0,
                            "automated": 0,
                            "carport": 2,
                            "total": 52,
                            "status": 1,
                            "addedBy": "pt_sadmin",
                            "addedDate": "2017-08-16 11:26:08",
                            "modifyBy": "pt_sadmin",
                            "modifyDate": "2019-02-06 16:20:45",
                            "stationId": 1,
                            "perpendicular": 35
                        }
                    ]

              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/parking/group:
        post:
          tags:
          - Park Station
          summary: Create/Update Corporate Station Group
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/StationGroupBody'
          security: []
          responses:
              '200':
                $ref: '#/components/responses/DefaultSuccessResponse'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/parking/groups/{corporateId}:
        get:
          tags:
          - Park Station
          summary: Get Station group by Corporate
          parameters:
            - in: path
              name: corporateId
              schema:
                type: number
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          security: []
          responses:
              '200':
                description: park station groups by corporate id
                content:
                  application/json:
                    schema:
                        type: array
                        items:
                          $ref: '#/components/schemas/StationGroupBody'
                    example:
                      [
                          {
                              "stationGroupId": 1,
                              "groupName": null,
                              "stations": [],
                              "createdBy": "pt_sadmin",
                              "createdDate": "2017-08-01 10:35:22",
                              "modifyBy": "admin",
                              "modifyDate": "2019-02-14 06:21:59",
                              "corporateId": 1,
                              "status": 1,
                              "stationsDetail": [
                                  {
                                      "stationId": 1,
                                      "stationCode": "001",
                                      "stationName": "3M Park",
                                      "providerBRN": "PV003",
                                      "address1": "Hedges Ct,",
                                      "address2": "Colombo",
                                      "city": "Colombo 10",
                                      "district": "Colombo",
                                      "postalCode": "01000",
                                      "country": "LK",
                                      "webaddress": "https://www.dialog.lk/",
                                      "stationEmail": "rashinda.silva@dialog.lk",
                                      "stationMobile": "0773337030",
                                      "billContact": "0773337030",
                                      "billContactName": "Rashinda Silva",
                                      "billContactEmail": "rashinda.silva@dialog.lk",
                                      "provideTchName": "Rashinda Silva",
                                      "stationTechMobile": "0773337030",
                                      "stationTechEmail": "rashinda.silva@dialog.lk",
                                      "contractStart": "2017-07-23 23:29:32",
                                      "contractEnd": "2018-07-23 23:29:32",
                                      "operationHours": null,
                                      "unitPrice": 100,
                                      "commission": 10,
                                      "providerId": 2,
                                      "latitude": 6.921656,
                                      "longitude": 79.864531,
                                      "status": 1,
                                      "addedBy": "pt_sadmin",
                                      "addedDate": "2017-07-23 22:57:42",
                                      "modifyBy": "pt_sadmin",
                                      "modifyDate": "2017-08-23 17:59:33",
                                      "availableSlots": 0,
                                      "providerName": "Dialog Axiata",
                                      "noOfSlots": 0,
                                      "noOfReserverd": 0,
                                      "noOfUsedSlots": 0,
                                      "noOfReserverdUsed": 0,
                                      "totalSlots": 0
                                  }
                              ],
                              "corporateStationDTOS": []
                          }
                      ]
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/parking/group/{groupId}:
        get:
          tags:
          - Park Station
          summary: Get Station group Details
          parameters:
            - in: path
              name: groupId
              schema:
                type: number
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                description: park station group by id
                content:
                  application/json:
                    schema:
                         $ref: '#/components/schemas/StationGroupBody'
                    example:
                          {
                              "stationGroupId": 1,
                              "groupName": null,
                              "stations": [],
                              "createdBy": "pt_sadmin",
                              "createdDate": "2017-08-01 10:35:22",
                              "modifyBy": "admin",
                              "modifyDate": "2019-02-14 06:21:59",
                              "corporateId": 1,
                              "status": 1,
                              "stationsDetail": [
                                  {
                                      "stationId": 1,
                                      "stationCode": "001",
                                      "stationName": "3M Park",
                                      "providerBRN": "PV003",
                                      "address1": "Hedges Ct,",
                                      "address2": "Colombo",
                                      "city": "Colombo 10",
                                      "district": "Colombo",
                                      "postalCode": "01000",
                                      "country": "LK",
                                      "webaddress": "https://www.dialog.lk/",
                                      "stationEmail": "rashinda.silva@dialog.lk",
                                      "stationMobile": "0773337030",
                                      "billContact": "0773337030",
                                      "billContactName": "Rashinda Silva",
                                      "billContactEmail": "rashinda.silva@dialog.lk",
                                      "provideTchName": "Rashinda Silva",
                                      "stationTechMobile": "0773337030",
                                      "stationTechEmail": "rashinda.silva@dialog.lk",
                                      "contractStart": "2017-07-23 23:29:32",
                                      "contractEnd": "2018-07-23 23:29:32",
                                      "operationHours": null,
                                      "unitPrice": 100,
                                      "commission": 10,
                                      "providerId": 2,
                                      "latitude": 6.921656,
                                      "longitude": 79.864531,
                                      "status": 1,
                                      "addedBy": "pt_sadmin",
                                      "addedDate": "2017-07-23 22:57:42",
                                      "modifyBy": "pt_sadmin",
                                      "modifyDate": "2017-08-23 17:59:33",
                                      "availableSlots": 0,
                                      "providerName": "Dialog Axiata",
                                      "noOfSlots": 0,
                                      "noOfReserverd": 0,
                                      "noOfUsedSlots": 0,
                                      "noOfReserverdUsed": 0,
                                      "totalSlots": 0
                                  }
                              ],
                              "corporateStationDTOS": []
                          }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/parking/{corporateId}/stations/availability:
        get:
          tags:
          - Park Station
          summary: Get Stations by Corporate
          parameters:
            - in: path
              name: corporateId
              schema:
                type: number
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                description: Stations by Corporate ID
                content:
                  application/json:
                    schema:
                        type: array
                        items:
                          $ref: '#/components/responses/StationAvailabilityBody'
                    example:
                          [
                            {
                              "stationGroupId": 1,
                              "groupName": null,
                              "stations": [],
                              "createdBy": "pt_sadmin",
                              "createdDate": "2017-08-01 10:35:22",
                              "modifyBy": "admin",
                              "modifyDate": "2019-02-14 06:21:59",
                              "corporateId": 1,
                              "status": 1,
                              "stationsDetail": [
                                  {
                                      "stationId": 1,
                                      "stationCode": "001",
                                      "stationName": "3M Park",
                                      "providerBRN": "PV003",
                                      "address1": "Hedges Ct,",
                                      "address2": "Colombo",
                                      "city": "Colombo 10",
                                      "district": "Colombo",
                                      "postalCode": "01000",
                                      "country": "LK",
                                      "webaddress": "https://www.dialog.lk/",
                                      "stationEmail": "rashinda.silva@dialog.lk",
                                      "stationMobile": "0773337030",
                                      "billContact": "0773337030",
                                      "billContactName": "Rashinda Silva",
                                      "billContactEmail": "rashinda.silva@dialog.lk",
                                      "provideTchName": "Rashinda Silva",
                                      "stationTechMobile": "0773337030",
                                      "stationTechEmail": "rashinda.silva@dialog.lk",
                                      "contractStart": "2017-07-23 23:29:32",
                                      "contractEnd": "2018-07-23 23:29:32",
                                      "operationHours": null,
                                      "unitPrice": 100,
                                      "commission": 10,
                                      "providerId": 2,
                                      "latitude": 6.921656,
                                      "longitude": 79.864531,
                                      "status": 1,
                                      "addedBy": "pt_sadmin",
                                      "addedDate": "2017-07-23 22:57:42",
                                      "modifyBy": "pt_sadmin",
                                      "modifyDate": "2017-08-23 17:59:33",
                                      "availableSlots": 0,
                                      "providerName": "Dialog Axiata",
                                      "noOfSlots": 0,
                                      "noOfReserverd": 0,
                                      "noOfUsedSlots": 0,
                                      "noOfReserverdUsed": 0,
                                      "totalSlots": 0
                                  }
                              ],
                              "corporateStationDTOS": []
                            }
                          ]
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/stations/nearest:
        post:
          tags:
          - Park Station
          summary: Get Parking Stations by location
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/CurrentLocationRequestBody'
          security: []
          responses:
              '200':
                description: park stations by location
                content:
                  application/json:
                    schema:
                         $ref: '#/components/schemas/StationGroupBody'
                    example:
                          {
                              "isSuccess": true,
                              "statusDesc": "Success ",
                              "parkingStationResults": [
                                  {
                                      "stationId": 1,
                                      "stationCode": "001",
                                      "brn": "PV003",
                                      "name": "3M Park",
                                      "address": {
                                          "userId": 0,
                                          "addressId": 0,
                                          "addressType": "STATION",
                                          "line1": "Hedges Ct,",
                                          "line2": "Colombo",
                                          "city": "Colombo 10",
                                          "district": "Colombo",
                                          "province": "",
                                          "postalCode": "01000",
                                          "country": "LK"
                                      },
                                      "longitude": "79.864531",
                                      "latitude": "6.921656",
                                      "webAddress": "https://www.dialog.lk/",
                                      "email": "rashinda.silva@dialog.lk",
                                      "contactNo": "0773337030",
                                      "noOfFreeSlots": 150,
                                      "status": 1
                                  }
                              ]
                          }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/stations/{stationId}:
        post:
          tags:
          - Park Station
          summary: Get Parking Station levelss by station
          parameters:
            - in: path
              name: stationId
              schema:
                type: integer
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: device-Id
              schema:
                type: string
              required: true
          security: []
          responses:
              '200':
                description: park station levels by station
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: '#/components/schemas/StationLevelBody'
                    example: [
                                 {
                                     "levelid": 7,
                                     "levelName": "Ground Level",
                                     "parallel": 10,
                                     "angle": 5,
                                     "accessible": 0,
                                     "automated": 0,
                                     "carport": 2,
                                     "total": 52,
                                     "status": 1,
                                     "addedBy": "pt_sadmin",
                                     "addedDate": "2017-08-16 11:26:08",
                                     "modifyBy": "pt_sadmin",
                                     "modifyDate": "2019-02-06 16:20:45",
                                     "stationId": 1,
                                     "perpendicular": 35
                                 }
                            ]
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/station/user/:
        post:
          tags:
          - Park Station
          summary: Add User Group to Station Group.
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/UserStationGroupBody'
          security: []
          responses:
              '200':
                description: station user group details
                content:
                  application/json:
                    schema:
                        $ref: '#/components/requestBodies/UserStationGroupBody'
                    example:
                        {
                            addedBy: admin,
                            addedDate: 2010-04-11 21:00:12,
                            modifyBy: admin,
                            modifyDate: 2019-04-11 21:00:12,
                            stationGroup: {
                                corporateId: 12,
                                stationGroupId: 22
                            },
                            stationUserGroupId: 0,
                            status: 1,
                            userGroup: {
                                corporateId: 12,
                                userGroupId: 33
                            }
                        }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

        delete:
          tags:
          - Park Station
          summary: Remove User Group from Station Group.
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
            - in: header
              name: stationgroupId
              schema:
                type: number
              required: true
            - in: header
              name: userGroupId
              schema:
                type: number
              required: true
          security: []
          responses:
              '200':
                example: {}
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/station/user/{station-group-id}:
        get:
          tags:
          - Park Station
          summary: Get Mapping By group mapping Id
          parameters:
            - in: path
              name: station-group-id
              schema:
                type: number
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                description: Get Mapping By group mapping Id
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UserStationGroup'
                    example:
                      {
                          "stationUserGroupId": 1,
                          "userGroup": {
                              "userGroupId": 1,
                              "groupName": "General Parking Users",
                              "groupDesc": null,
                              "users": [],
                              "createdBy": "pt_sadmin",
                              "createdDate": "2017-08-01 10:02:17",
                              "modufyBy": "super",
                              "modifyDate": "2019-02-17 10:47:56",
                              "corporateId": 1,
                              "status": 1
                          },
                          "stationGroup": {
                              "stationGroupId": 1,
                              "groupName": null,
                              "stations": [],
                              "createdBy": "pt_sadmin",
                              "createdDate": "2017-08-01 10:35:22",
                              "modifyBy": "admin",
                              "modifyDate": "2019-02-14 06:21:59",
                              "corporateId": 1,
                              "status": 1
                          },
                          "addedBy": "pt_sadmin",
                          "addedDate": "2017-08-02 03:55:53",
                          "modifyBy": "pt_sadmin",
                          "modifyDate": "2017-08-23 22:53:35",
                          "status": 0
                      }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/station/usergroups/{station-group-id}:
        get:
          tags:
          - Park Station
          summary: Get User Groups By StationId
          parameters:
            - in: path
              name: station-group-id
              schema:
                type: number
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                description: Get User Groups By StationId
                content:
                  application/json:
                    schema:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserStationGroup'
                    example:
                      [
                          {
                              "userGroupId": 9,
                              "groupName": "dev",
                              "groupDesc": null,
                              "users": [],
                              "createdBy": "corpadmin",
                              "createdDate": "2019-02-07 07:07:26",
                              "modufyBy": "super",
                              "modifyDate": "2019-03-09 07:04:19",
                              "corporateId": 6,
                              "status": 1,
                              "userStationGroupId": 11
                          }
                      ]
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/stations/{system-userId}:
        post:
          tags:
          - Park Station
          summary: Get Parking Stations Details by admin user
          parameters:
            - in: path
              name: system-userId
              schema:
                type: integer
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          security: []
          responses:
              '200':
                description: park station details by admin
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: '#/components/responses/StationAvailabilityBody'
                    example: [
                                 {
                                     "totalSlots": 32,
                                     "usedSlots": 0,
                                     "totalReservedSlots": 33,
                                     "reservedUsedSlots": 0,
                                     "totalAvailableReserved": 33,
                                     "totalAvailableNormal": 32,
                                     "station": {
                                         "stationId": 6,
                                         "stationCode": "11",
                                         "stationName": "Bentota",
                                         "providerBRN": "PV123PP",
                                         "address1": "GalleRoad",
                                         "address2": "gtvftg",
                                         "city": "bentota",
                                         "district": "southern",
                                         "postalCode": "444",
                                         "country": "SM",
                                         "webaddress": "http://wwe.com",
                                         "stationEmail": "vfe@bgbgr",
                                         "stationMobile": "43234242",
                                         "billContact": "545345",
                                         "billContactName": "gbftbe",
                                         "billContactEmail": "tgvfgt@gvft",
                                         "provideTchName": "Silva parking provider",
                                         "stationTechMobile": "43242",
                                         "stationTechEmail": "gvfevg@vfg",
                                         "contractStart": "2019-02-05 09:55:03",
                                         "contractEnd": "2019-03-09 09:55:03",
                                         "operationHours": null,
                                         "unitPrice": 2000,
                                         "commission": 323,
                                         "providerId": 3,
                                         "latitude": 10,
                                         "longitude": 11,
                                         "status": 1,
                                         "addedBy": "pt_sadmin",
                                         "addedDate": "2019-02-04 09:55:07",
                                         "modifyBy": null,
                                         "modifyDate": null,
                                         "availableSlots": 0,
                                         "providerName": "Silva parking provider",
                                         "noOfSlots": 0,
                                         "noOfReserverd": 0,
                                         "noOfUsedSlots": 0,
                                         "noOfReserverdUsed": 0,
                                         "totalSlots": 0
                                     },
                                     "availableSlots": 32,
                                     "availableReservedSlots": 33
                                 }
                             ]
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /stationsByUser/{userId}:
        get:
          tags:
          - Park Station
          summary: Get Stations by corporate user
          parameters:
            - in: path
              name: userId
              schema:
                type: number
              required: true

          security: []
          responses:
              '200':
                description: Stations by corporate user id
                content:
                  application/json:
                    schema:
                        type: array
                        items:
                          $ref: '#/components/schemas/ParkStationBody'
                    example:
                      {
                          "status": 200,
                          "stations": [
                              {
                                  "stationId": 1,
                                  "stationCode": "001",
                                  "stationName": "3M Park",
                                  "providerBRN": "PV003",
                                  "address1": "Hedges Ct,",
                                  "address2": "Colombo",
                                  "city": "Colombo 10",
                                  "district": "Colombo",
                                  "postalCode": "01000",
                                  "country": "LK",
                                  "webaddress": "https://www.dialog.lk/",
                                  "stationEmail": "rashinda.silva@dialog.lk",
                                  "stationMobile": "0773337030",
                                  "billContact": "0773337030",
                                  "billContactName": "Rashinda Silva",
                                  "billContactEmail": "rashinda.silva@dialog.lk",
                                  "provideTchName": "Rashinda Silva",
                                  "stationTechMobile": "0773337030",
                                  "stationTechEmail": "rashinda.silva@dialog.lk",
                                  "contractStart": "2017-07-23 23:29:32",
                                  "contractEnd": "2018-07-23 23:29:32",
                                  "operationHours": null,
                                  "unitPrice": 100,
                                  "commission": 10,
                                  "providerId": 2,
                                  "latitude": 6.921656,
                                  "longitude": 79.864531,
                                  "status": 1,
                                  "addedBy": "pt_sadmin",
                                  "addedDate": "2017-07-23 22:57:42",
                                  "modifyBy": "pt_sadmin",
                                  "modifyDate": "2017-08-23 17:59:33",
                                  "availableSlots": 123,
                                  "providerName": "Dialog Axiata",
                                  "noOfSlots": 26,
                                  "noOfReserverd": 4,
                                  "noOfUsedSlots": 0,
                                  "noOfReserverdUsed": 0,
                                  "totalSlots": 0
                              }
                          ]
                      }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /corporatestations/{stationId}:
        get:
          tags:
          - Park Station
          summary: Get Corporate Stations by station
          parameters:
            - in: path
              name: stationId
              schema:
                type: number
              required: true

          security: []
          responses:
              '200':
                description:  corporate stations by station id
                content:
                  application/json:
                    schema:
                        type: array
                        items:
                          $ref: '#/components/schemas/CorporateStationBody'
                    example:
                      [
                          {
                              "corporateStationId": 3,
                              "stationCode": "001",
                              "noOfSlots": 20,
                              "noOfReserverd": 3,
                              "noOfUsedSlots": 0,
                              "noOfReserverdUsed": 0,
                              "corporateId": 1,
                              "stationId": 1,
                              "stationName": "3M Park",
                              "addedBy": "pt_sadmin",
                              "addedDate": "2017-08-16 11:31:11",
                              "modifyBy": "pt_sadmin",
                              "modifyDate": "2019-02-10 01:22:09",
                              "status": 1,
                              "providerName": "Dialog Axiata",
                              "corporateName": "Dialog Axiata PLC"
                          }
                      ]
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/parking/tag/:
        put:
          tags:
          - Park Tag
          summary: Add New ParkTag
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/ParkTagBody'
          security: []
          responses:
              '200':
                $ref: '#/components/requestBodies/ParkTagBody'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'
        post:
          tags:
          - Park Tag
          summary: Update ParkTag
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/ParkTagBody'
          security: []
          responses:
              '200':
                $ref: '#/components/requestBodies/ParkTagBody'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/parking/tag/{corporateId}:
        get:
          tags:
          - Park Tag
          summary: Get ParkTags by corporate
          parameters:
            - in: path
              name: corporateId
              schema:
                type: number
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                description:  parktsgs by corporate id
                content:
                  application/json:
                    schema:
                        type: array
                        items:
                          $ref: '#/components/schemas/ParkTagBody'
                    example:
                      {
                          "content": [
                              {
                                  "tagId": 7165,
                                  "tagSerial": "7790000065",
                                  "tagUid": "04336652973580",
                                  "status": "CREATED",
                                  "addedDate": "2017-08-20 12:28:11",
                                  "addedBy": "pt_sadmin",
                                  "modifyDate": "2019-02-14 15:27:37",
                                  "modifyBy": "sadmin",
                                  "corporateId": 1
                              }
                          ]
                      }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/parking/tag/search:
        get:
          tags:
          - Park Tag
          summary: Get ParkTags by corporate and tag uid or did
          parameters:
            - in: header
              name: corporateId
              schema:
                type: number
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
            - in: header
              name: searchTag
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                description: ParkTags by corporate id and tag uid or serial
                content:
                  application/json:
                    schema:
                        type: array
                        items:
                          $ref: '#/components/schemas/ParkTagBody'
                    example:
                      {
                          "content": [
                              {
                                  "tagId": 7165,
                                  "tagSerial": "7790000065",
                                  "tagUid": "04336652973580",
                                  "status": "CREATED",
                                  "addedDate": "2017-08-20 12:28:11",
                                  "addedBy": "pt_sadmin",
                                  "modifyDate": "2019-02-14 15:27:37",
                                  "modifyBy": "sadmin",
                                  "corporateId": 1
                              }
                          ]
                      }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/station/device/:
        put:
          tags:
          - Station Devices
          summary: Add Device for Station
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/StationDeviecBody'
          security: []
          responses:
              '200':
                $ref: '#/components/requestBodies/StationDeviecBody'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

        post:
          tags:
          - Station Devices
          summary: Update Device of Station
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/StationDeviecBody'
          security: []
          responses:
              '200':
                $ref: '#/components/requestBodies/StationDeviecBody'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/station/device/{deviceId}:
        get:
          tags:
          - Station Devices
          summary: Get Device of Station by device id
          parameters:
            - in: path
              name: deviceId
              schema:
                type: number
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          security: []
          responses:
              '200':
                $ref: '#/components/requestBodies/StationDeviecBody'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/station/devices/{stationId}:
        get:
          tags:
          - Station Devices
          summary: Get Devices of Station by staion
          parameters:
            - in: path
              name: stationId
              schema:
                type: number
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          security: []
          responses:
              '200':
                  description: station devices list by station
                  content:
                    application/json:
                      schema:
                        type: array
                        items:
                          $ref: '#/components/requestBodies/StationDeviecBody'
                      example:
                          [
                              {
                                  "deviceId": 4,
                                  "deviceSerial": "352701061289879",
                                  "userName": "3m_dialog",
                                  "password": null,
                                  "addedby": "pt_sadmin",
                                  "addedDate": "2017-07-24 05:03:58",
                                  "modifyBy": "sadmin",
                                  "modifyDate": "2019-02-14 06:57:43",
                                  "chargeAmount": 0,
                                  "status": 1,
                                  "contactName": "Rashinda Silva",
                                  "contactMobile": "0773337030",
                                  "stationId": 1,
                                  "deviceCode": "352701061289879",
                                  "make": "FAMOCO",
                                  "model": "FX100",
                                  "emei": "9402970276896856",
                                  "mobileNumber": "776666627",
                                  "deviceProvider": "Dialog",
                                  "technicalContact": "Rashinda Silva",
                                  "techinicalContactMobile": "0773337030"
                              }
                          ]
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/station/devices:
        get:
          tags:
          - Station Devices
          summary: Get all Devices of Station
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          security: []
          responses:
              '200':
                  description: station's all the devices list
                  content:
                    application/json:
                      schema:
                        type: array
                        items:
                          $ref: '#/components/requestBodies/StationDeviecBody'
                      example:
                          {
                              "content": [
                                  {
                                      "deviceId": 4,
                                      "deviceSerial": "352701061289879",
                                      "userName": "3m_dialog",
                                      "password": null,
                                      "addedby": "pt_sadmin",
                                      "addedDate": "2017-07-24 05:03:58",
                                      "modifyBy": "sadmin",
                                      "modifyDate": "2019-02-14 06:57:43",
                                      "chargeAmount": 0,
                                      "status": 1,
                                      "contactName": "Rashinda Silva",
                                      "contactMobile": "0773337030",
                                      "stationId": 1,
                                      "deviceCode": "352701061289879",
                                      "make": "FAMOCO",
                                      "model": "FX100",
                                      "emei": "9402970276896856",
                                      "mobileNumber": "776666627",
                                      "deviceProvider": "Dialog",
                                      "technicalContact": "Rashinda Silva",
                                      "techinicalContactMobile": "0773337030"
                                  }
                              ]
                          }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/station/login/:
        post:
          tags:
          - Station Devices
          summary: Login to the station device
          parameters:
            - in: header
              name: device-Id
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
            - in: header
              name: password
              schema:
                type: string
              required: true
          security: []
          responses:
              '200':
                $ref: '#/components/requestBodies/StationDeviecBody'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/station/transaction:
        post:
          tags:
          - Station Devices
          summary: Station park IN OUT transaction
          parameters:
            - in: header
              name: device-Id
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/StationTransactionBody'
          security: []
          responses:
              '200':
                $ref: '#/components/requestBodies/StationTransactionBody'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/station/availablity/{deviceNo}:
        get:
          tags:
          - Station Devices
          summary: Get the station availability by Device
          parameters:
            - in: path
              name: deviceNo
              schema:
                type: number
              required: true
            - in: header
              name: device-Id
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                description: Stations by Corporate ID
                content:
                  application/json:
                    schema:
                        type: array
                        items:
                          $ref: '#/components/responses/StationAvailabilityBody'
                    example:
                          {
                              "totalSlots": 66,
                              "usedSlots": 65,
                              "totalReservedSlots": 2,
                              "reservedUsedSlots": 0,
                              "totalAvailableReserved": 2,
                              "totalAvailableNormal": 1,
                              "station": {
                                  "stationId": 3,
                                  "stationCode": "003",
                                  "stationName": "Hayleys Car Park",
                                  "providerBRN": "PV003",
                                  "address1": "DAP,",
                                  "address2": "Foster Lane,",
                                  "city": "Colombo 10",
                                  "district": "Western",
                                  "postalCode": "00100",
                                  "country": "LK",
                                  "webaddress": "https://www.dialog.lk",
                                  "stationEmail": "service@dialog.lk",
                                  "stationMobile": "0777678700",
                                  "billContact": "0777337073",
                                  "billContactName": "Saman Jayasinghe",
                                  "billContactEmail": "saman.jayasinghe@dialog.lk",
                                  "provideTchName": "Rashinda Silva",
                                  "stationTechMobile": "0777337073",
                                  "stationTechEmail": "saman.jayasinghe@dialog.lk",
                                  "contractStart": "2017-07-31 23:35:14",
                                  "contractEnd": "2018-07-30 23:35:14",
                                  "operationHours": null,
                                  "unitPrice": 100,
                                  "commission": 10,
                                  "providerId": 2,
                                  "latitude": 6.918308,
                                  "longitude": 79.863659,
                                  "status": 1,
                                  "addedBy": "pt_sadmin",
                                  "addedDate": "2017-08-20 12:12:01",
                                  "modifyBy": "pt_sadmin",
                                  "modifyDate": "2017-08-23 18:05:14",
                                  "availableSlots": 0,
                                  "providerName": "Dialog Axiata",
                                  "noOfSlots": 0,
                                  "noOfReserverd": 0,
                                  "noOfUsedSlots": 0,
                                  "noOfReserverdUsed": 0,
                                  "totalSlots": 0
                              },
                              "availableSlots": 1,
                              "availableReservedSlots": 2
                          }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'


  /web/station/device/getCurrentlyParkedVehicles/{deviceId}:
        get:
          tags:
          - Station Devices
          summary: Get the currently parked vehicles of the station
          parameters:
            - in: path
              name: deviceId
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                description: Stations by Corporate ID
                content:
                  application/json:
                    schema:
                        type: array
                        items:
                          $ref: '#/components/responses/ParkedVehicleDetalResponse'
                    example:
                      {
                          "status": 200,
                          "vehicleUserInfoList": [
                              {
                                  "vehicleId": 1468,
                                  "registrationNo": "XYZ-0678",
                                  "model": null,
                                  "make": null,
                                  "vehicleType": "CAR",
                                  "userFirstName": "Sujitha Niroshan",
                                  "userLastName": null,
                                  "userMobile": null,
                                  "userEmail": null,
                                  "emergencyMobile": null,
                                  "fullName": null
                              }
                          ]
                      }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/user/pending:
          get:
            tags:
            - Public user
            summary: Get Pending Registration for Approval
            parameters:
              - in: header
                name: smart-session-key
                schema:
                  type: string
                required: true
              - in: header
                name: userName
                schema:
                  type: string
                required: true
              - in: header
                name: corporateId
                schema:
                  type: number
                required: true

            security: []
            responses:
                '200':
                  description: pending corp users of the corporate
                  content:
                    application/json:
                      schema:
                          type: array
                          items:
                            $ref: '#/components/responses/CorpUserDetailResponse'
                      example:
                              [
                                {
                                    "userId": 1,
                                    "firstName": "A K B Lilantha Senathilake",
                                    "lastName": null,
                                    "identificationType": null,
                                    "identificationValue": null,
                                    "mobile": null,
                                    "email": null,
                                    "department": null,
                                    "budgetReferance": null,
                                    "otherReferance": "6415",
                                    "status": "Acive",
                                    "empId": null,
                                    "approvedUser": "pt_sadmin",
                                    "approvedDate": "23-01-2019 17:01:11",
                                    "createdDate": "20-08-2017 12:08:39",
                                    "addedUser": "pt_sadmin",
                                    "modifiedDate": null,
                                    "modifyUser": null,
                                    "corporateId": 1,
                                    "userGroupName": null,
                                    "userCode": null
                                }
                            ]

                '400':
                  $ref: '#/components/responses/DefaultErrorResponse'

  /web/user/mobile/users/{corporateId}:
          get:
            tags:
            - Public user
            summary: Get Public Users by corporate
            parameters:
              - in: header
                name: smart-session-key
                schema:
                  type: string
                required: true
              - in: header
                name: userName
                schema:
                  type: string
                required: true
              - in: path
                name: corporateId
                schema:
                  type: number
                required: true

            security: []
            responses:
                '200':
                  description: users list by corporate
                  content:
                    application/json:
                      schema:
                          type: array
                          items:
                            $ref: '#/components/responses/CorpUserDetailResponse'
                      example:
                         {
                             "content": [
                                 {
                                     "userId": 1,
                                     "firstName": "A K B Lilantha Senathilake",
                                     "lastName": null,
                                     "identificationType": null,
                                     "identificationValue": null,
                                     "mobile": null,
                                     "email": null,
                                     "department": null,
                                     "budgetReferance": null,
                                     "otherReferance": "6415",
                                     "status": "Acive",
                                     "empId": null,
                                     "approvedUser": "pt_sadmin",
                                     "approvedDate": "23-01-2019 17:01:11",
                                     "createdDate": "20-08-2017 12:08:39",
                                     "addedUser": "pt_sadmin",
                                     "modifiedDate": null,
                                     "modifyUser": null,
                                     "corporateId": 1,
                                     "userGroupName": null,
                                     "userCode": null
                                 }
                              ]
                          }

                '400':
                  $ref: '#/components/responses/DefaultErrorResponse'

  /web/user/:
        put:
          tags:
          - Admin user
          summary: add new admin to the system
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/AdminUserBody'
          security: []
          responses:
              '200':
                $ref: '#/components/requestBodies/AdminUserBody'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'
        post:
          tags:
          - Admin user
          summary: update admin of the system
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/AdminUserBody'
          security: []
          responses:
              '200':
                $ref: '#/components/requestBodies/AdminUserBody'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

        get:
          tags:
          - Admin user
          summary: get all system users
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                  description: corporates of the user
                  content:
                    application/json:
                      schema:
                        type: array
                        items:
                          $ref: '#/components/schemas/AdminUserBody'
                      example:
                        {
                            "content": [
                                {
                                    "userId": 1,
                                    "userName": "pt_sadmin",
                                    "password": null,
                                    "fullName": "ParkTags Super Admin9",
                                    "email": "admin3@parktags.com",
                                    "status": 1,
                                    "addedBy": "sysadmin",
                                    "addedDate": "2017-07-09 10:33:28",
                                    "modifyBy": "pt_sadmin",
                                    "modifyDate": "2019-02-13 04:39:41",
                                    "userRoles": "SYS_ADMIN",
                                    "corporates": [
                                        {
                                            "corporateId": 10,
                                            "corporateCode": "c5",
                                            "corporateName": "gfe",
                                            "address": [
                                                {
                                                    "addressId": 10,
                                                    "addressLine1": "grfw",
                                                    "addressLine2": "bfww",
                                                    "city": "vfw",
                                                    "district": "Ampara",
                                                    "state": "Central Province",
                                                    "postalCode": "43242",
                                                    "country": "AS",
                                                    "addedBy": "sadmin",
                                                    "addedDate": "2019-02-12 10:14:06",
                                                    "modifyBy": null,
                                                    "modifyDate": null
                                                }
                                            ],
                                            "webAddress": "gtfe",
                                            "email": "vgfr",
                                            "contactNo": "432",
                                            "billingContact": "GVFE",
                                            "billMobile": "52",
                                            "billEmail": "gvrfe",
                                            "techContact": "tgbfrt",
                                            "techEmail": "tve",
                                            "brc": "gtfe",
                                            "techMobile": "23424",
                                            "contractStart": "2019-01-01",
                                            "contractEnd": "2019-01-01",
                                            "status": 1,
                                            "addedBy": "sadmin",
                                            "addedDate": "2019-02-12 10:14:06",
                                            "modifyBy": null,
                                            "modifyDate": null,
                                            "photoPath": null
                                        }
                                    ],
                                    "corpIds": []
                                }
                            ]
                        }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/user/{userId}:
        get:
          tags:
          - Admin user
          summary: search admin of the system
          parameters:
            - in: path
              name: userId
              schema:
                type: string
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                description: admin user body with corporates
                content:
                  application/json:
                    schema:
                      $ref: '#/components/requestBodies/AdminUserBody'
                    example:
                        {
                            "userId": 1,
                            "userName": "pt_sadmin",
                            "password": null,
                            "fullName": "ParkTags Super Admin9",
                            "email": "admin3@parktags.com",
                            "status": 1,
                            "addedBy": "sysadmin",
                            "addedDate": "2017-07-09 10:33:28",
                            "modifyBy": "pt_sadmin",
                            "modifyDate": "2019-02-13 04:39:41",
                            "userRoles": "SYS_ADMIN",
                            "corporates": [
                                {
                                    "corporateId": 10,
                                    "corporateCode": "c5",
                                    "corporateName": "gfe",
                                    "address": [
                                        {
                                            "addressId": 10,
                                            "addressLine1": "grfw",
                                            "addressLine2": "bfww",
                                            "city": "vfw",
                                            "district": "Ampara",
                                            "state": "Central Province",
                                            "postalCode": "43242",
                                            "country": "AS",
                                            "addedBy": "sadmin",
                                            "addedDate": "2019-02-12 10:14:06",
                                            "modifyBy": null,
                                            "modifyDate": null
                                        }
                                    ],
                                    "webAddress": "gtfe",
                                    "email": "vgfr",
                                    "contactNo": "432",
                                    "billingContact": "GVFE",
                                    "billMobile": "52",
                                    "billEmail": "gvrfe",
                                    "techContact": "tgbfrt",
                                    "techEmail": "tve",
                                    "brc": "gtfe",
                                    "techMobile": "23424",
                                    "contractStart": "2019-01-01",
                                    "contractEnd": "2019-01-01",
                                    "status": 1,
                                    "addedBy": "sadmin",
                                    "addedDate": "2019-02-12 10:14:06",
                                    "modifyBy": null,
                                    "modifyDate": null,
                                    "photoPath": null
                                }
                            ],
                            "corpIds": []
                        }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/user/authenticate:
        post:
          tags:
          - Admin user
          summary: authenticate user when system login
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
            - in: header
              name: password
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                $ref: '#/components/requestBodies/AdminUserBody'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/user/addCorporates/{userId}:
        post:
          tags:
          - Admin user
          summary: add corporate to system user
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
            - in: path
              name: userId
              schema:
                type: string
              required: true
          requestBody:
            description: corporates array list
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/requestBodies/CorporateBody'
                example: [
                             {
                               "corporateId": 12,
                               "corporateCode": "C002",
                               "corporateName": "Dialog axiata",
                               "webAddress": "wwe.com",
                               "email": "ger@gmail.com",
                               "contactNo": "773289774",
                               "contractStart": "2019-04-11",
                               "contractEnd": "2020-04-11",
                               "status": 1,
                               "addedBy": "super-user",
                               "addedDate": "2019-04-11 21:00:12",
                               "modifyBy": "sadmin",
                               "modifyDate": "2019-04-11 21:00:12",
                             }
                           ]
          security: []
          responses:
              '200':
                  content:
                    application/json:
                      schema:
                        type: boolean
                      example: true
                  description: boolean
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/user/removeCorporate/{userId}/{corporateId}:
        post:
          tags:
          - Admin user
          summary: remove corporate from system user
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
            - in: path
              name: userId
              schema:
                type: number
              required: true
            - in: path
              name: corporateId
              schema:
                type: number
              required: true

          security: []
          responses:
              '200':
                  content:
                    null
                  description: null
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/user/{userId}/corporates:
        get:
          tags:
          - Admin user
          summary: get corporates by user
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
            - in: path
              name: userId
              schema:
                type: number
              required: true

          security: []
          responses:
              '200':
                  description: corporates of the user
                  content:
                    application/json:
                      schema:
                        type: array
                        items:
                          $ref: '#/components/schemas/CorporateBody'
                      example:
                        [
                            {
                                "corporateId": 10,
                                "corporateCode": "c5",
                                "corporateName": "gfe",
                                "address": [
                                    {
                                        "addressId": 10,
                                        "addressLine1": "grfw",
                                        "addressLine2": "bfww",
                                        "city": "vfw",
                                        "district": "Ampara",
                                        "state": "Central Province",
                                        "postalCode": "43242",
                                        "country": "AS",
                                        "addedBy": "sadmin",
                                        "addedDate": "2019-02-12 10:14:06",
                                        "modifyBy": null,
                                        "modifyDate": null
                                    }
                                ],
                                "webAddress": "gtfe",
                                "email": "vgfr",
                                "contactNo": "432",
                                "billingContact": "GVFE",
                                "billMobile": "52",
                                "billEmail": "gvrfe",
                                "techContact": "tgbfrt",
                                "techEmail": "tve",
                                "brc": "gtfe",
                                "techMobile": "23424",
                                "contractStart": "2019-01-01",
                                "contractEnd": "2019-01-01",
                                "status": 1,
                                "addedBy": "sadmin",
                                "addedDate": "2019-02-12 10:14:06",
                                "modifyBy": null,
                                "modifyDate": null,
                                "photoPath": null
                            }
                        ]

              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/user/group:
        post:
          tags:
          - Public user
          summary: Create/Update Corporate User Group
          parameters:
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/UserGroupBody'

          security: []
          responses:
              '200':
                $ref: '#/components/requestBodies/UserGroupBody'

              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/user/group/{groupId}:
        get:
          tags:
          - Public user
          summary: Get Users added to corporate Group
          parameters:
            - in: path
              name: groupId
              schema:
                type: number
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                description: corporate users list by group
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/CorpUserDetailBody'
                    example:
                      {
                          "content": [
                              {
                                  "userId": 1,
                                  "firstName": "A K B Lilantha Senathilake",
                                  "lastName": null,
                                  "identificationType": null,
                                  "identificationValue": null,
                                  "mobile": null,
                                  "email": null,
                                  "department": null,
                                  "budgetReferance": null,
                                  "otherReferance": "6415",
                                  "status": "Acive",
                                  "empId": null,
                                  "approvedUser": "pt_sadmin",
                                  "approvedDate": "23-01-2019 17:01:11",
                                  "createdDate": "20-08-2017 12:08:39",
                                  "addedUser": "pt_sadmin",
                                  "modifiedDate": null,
                                  "modifyUser": null,
                                  "corporateId": 1,
                                  "userGroupName": null,
                                  "userCode": null
                              }
                          ]
                      }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/user/group/corporate/{corporateId}:
        get:
          tags:
          - Public user
          summary: Get Users added to corporate Group
          parameters:
            - in: path
              name: corporateId
              schema:
                type: number
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                description: corporate users list by group
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UserGroup'
                    example:
                      [
                          {
                              "userGroupId": 1,
                              "groupName": "General Parking Users",
                              "groupDesc": null,
                              "users": [],
                              "createdBy": "pt_sadmin",
                              "createdDate": "2017-08-01 10:02:17",
                              "modufyBy": "super",
                              "modifyDate": "2019-02-17 10:47:56",
                              "corporateId": 1,
                              "status": 1
                          }
                      ]
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/user/group/{groupId}/{userId}:
        delete:
          tags:
          - Public user
          summary: Delete user from group
          parameters:
            - in: path
              name: groupId
              schema:
                type: number
              required: true
            - in: path
              name: userId
              schema:
                type: number
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                  description: null
                  content:
                    null
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

        post:
          tags:
          - Public user
          summary: Add user to group
          parameters:
            - in: path
              name: groupId
              schema:
                type: number
              required: true
            - in: path
              name: userId
              schema:
                type: number
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                  description: null
                  content:
                    null
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/user/search:
        get:
          tags:
          - Public user
          summary: Search User
          parameters:
            - in: header
              name: search-key
              schema:
                type: string
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                description: corporate users list by group
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/CorpUserDetailBody'
                    example:
                      [
                          {
                              "userId": 4097,
                              "firstName": "Testing",
                              "lastName": "test1",
                              "identificationType": null,
                              "identificationValue": "674455364v",
                              "mobile": "778866968",
                              "email": "testing@112.com",
                              "department": "Transport",
                              "budgetReferance": null,
                              "otherReferance": null,
                              "status": null,
                              "empId": null,
                              "approvedUser": "pt_sadmin",
                              "approvedDate": "05-02-2019 03:02:04",
                              "createdDate": "05-02-2019 03:02:02",
                              "addedUser": "pt_sadmin",
                              "modifiedDate": null,
                              "modifyUser": null,
                              "corporateId": 1,
                              "userGroupName": null,
                              "userCode": null
                          }
                      ]
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /web/user/mobile/profile:
        put:
          tags:
          - Public user
          summary: Add Mobile full User
          parameters:
            - in: header
              name: corporateId
              schema:
                type: string
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/CorpUserRequestBody'
          security: []
          responses:
              '200':
                $ref: '#/components/requestBodies/CorpUserRequestBody'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

        post:
          tags:
          - Public user
          summary: Update Mobile full User
          parameters:
            - in: header
              name: corporateId
              schema:
                type: string
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/CorpUserRequestBody'
          security: []
          responses:
              '200':
                $ref: '#/components/requestBodies/CorpUserRequestBody'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

        delete:
          tags:
          - Public user
          summary: Delete Mobile User
          parameters:

          requestBody:
            $ref: '#/components/requestBodies/CorpUserRequestBody'
          security: []
          responses:
              '200':
                $ref: '#/components/responses/DefaultSuccessResponse'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'


  /web/user/mobile/profile/{userId}:
        get:
          tags:
          - Public user
          summary: Get Mobile full User
          parameters:
            - in: path
              name: userId
              schema:
                type: number
              required: true
            - in: header
              name: corporateId
              schema:
                type: string
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: userName
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                $ref: '#/components/requestBodies/CorpUserRequestBody'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/vehicle/:
        put:
          tags:
          - Public user vehicles
          summary: Add new vehicle to user
          parameters:
            - in: header
              name: device-Id
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/CorpVehicleRequestBody'
          security: []
          responses:
              '200':
                description: corporate vehicle
                content:
                  application/json:
                    schema:
                      $ref: '#/components/requestBodies/CorpVehicleRequestBody'
                    example:
                      {
                          "status": 0,
                          "statusDesc": null,
                          "vehicle": null,
                          "vehicleDTO": {
                              "vehicleId": 3213,
                              "registrationNo": "R323323",
                              "province": "WP",
                              "model": "Cadillac",
                              "make": "Nissan",
                              "parkTagNo": "7790000368",
                              "vehicleType": "Car",
                              "addedDate": "2019-04-15 03:13:30",
                              "addedBy": "admin",
                              "status": 1,
                              "userid": 21,
                              "tagReferance": "FRFRF2323GFGG",
                              "parkingType": "NORMAL",
                              "corporateId": 0,
                              "modifyBy": null,
                              "modifyDate": null,
                              "deviceId": null,
                              "vehicleMake": null
                          }
                      }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

        delete:
          tags:
          - Public user vehicles
          summary: delete vehicle of user
          parameters:
            - in: header
              name: device-Id
              schema:
                type: string
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/CorpVehicleRequestBody'
          security: []
          responses:
              '200':
                $ref: '#/components/responses/DefaultSuccessResponse'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

        post:
          tags:
          - Public user vehicles
          summary: Update vehicle of user
          parameters:
            - in: header
              name: device-Id
              schema:
                type: string
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
          requestBody:
            $ref: '#/components/requestBodies/CorpVehicleRequestBody'
          security: []
          responses:
              '200':
                description: corp user vehicle
                content:
                  application/json:
                    schema:
                      $ref: '#/components/requestBodies/CorpVehicleRequestBody'
                    example:
                      {
                          "status": 0,
                          "statusDesc": null,
                          "vehicle": null,
                          "vehicleDTO": {
                              "vehicleId": 3213,
                              "registrationNo": "R323323",
                              "province": "WP",
                              "model": "Cadillac",
                              "make": "Nissan",
                              "parkTagNo": "7790000368",
                              "vehicleType": "Car",
                              "addedDate": "2019-04-15 03:13:30",
                              "addedBy": "admin",
                              "status": 1,
                              "userid": 21,
                              "tagReferance": "FRFRF2323GFGG",
                              "parkingType": "NORMAL",
                              "corporateId": 0,
                              "modifyBy": null,
                              "modifyDate": null,
                              "deviceId": null,
                              "vehicleMake": null
                          }
                      }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

        get:
          tags:
          - Public user vehicles
          summary: Get vehicles by corporate
          parameters:
            - in: header
              name: device-Id
              schema:
                type: string
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true
            - in: header
              name: corporateId
              schema:
                type: number
              required: true

          security: []
          responses:
              '200':
                description: corporate vehicle
                content:
                  application/json:
                    schema:
                      $ref: '#/components/requestBodies/CorpVehicleRequestBody'
                    example:
                      {
                          "content": [
                              {
                                  "vehicleId": 1214,
                                  "registrationNo": "KK-5694",
                                  "province": null,
                                  "model": null,
                                  "make": null,
                                  "parkTagNo": "7790002167",
                                  "vehicleType": "CAR",
                                  "addedDate": "2017-08-20 12:20:54",
                                  "status": 1,
                                  "userid": 1,
                                  "corporateId": 1,
                                  "tagReferance": "04416852973580",
                                  "parkingType": "NORMAL",
                                  "userFirstName": "A K B Lilantha Senathilake",
                                  "userLastName": null,
                                  "userMobile": null,
                                  "userEmail": null,
                                  "addedBy": "pt_sadmin",
                                  "modifyBy": null,
                                  "modifyDate": null,
                                  "deviceId": null,
                                  "vehicleMake": null
                              }
                          ]
                      }
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'


  /mobile/vehicle/{userId}:
        get:
          tags:
          - Public user vehicles
          summary: Get vehicles of user
          parameters:
            - in: path
              name: userId
              schema:
                type: number
              required: true
            - in: header
              name: device-Id
              schema:
                type: string
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                description: corporate vehicle
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: '#/components/requestBodies/CorpVehicleRequestBody'
                    example:
                      [
                          {
                              "vehicleId": 729,
                              "registrationNo": "JP-6438",
                              "province": null,
                              "model": null,
                              "make": null,
                              "parkTagNo": "7790000696",
                              "vehicleType": "CAR",
                              "addedDate": "2017-08-20 12:20:54",
                              "status": 1,
                              "userid": 2,
                              "corporateId": 1,
                              "tagReferance": "041C8452973580",
                              "parkingType": "NORMAL",
                              "userFirstName": "A P L D J Nuwantha Liyanage",
                              "userLastName": null,
                              "userMobile": null,
                              "userEmail": null,
                              "addedBy": "pt_sadmin",
                              "modifyBy": null,
                              "modifyDate": null,
                              "deviceId": null,
                              "vehicleMake": null
                          }
                      ]
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/vehicle/search/{searchKey}:
        get:
          tags:
          - Public user vehicles
          summary: Get vehicle by key
          parameters:
            - in: path
              name: searchKey
              schema:
                type: string
              required: true
            - in: header
              name: device-Id
              schema:
                type: string
              required: true
            - in: header
              name: smart-session-key
              schema:
                type: string
              required: true

          security: []
          responses:
              '200':
                description: corporate vehicle
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: '#/components/requestBodies/CorpVehicleRequestBody'
                    example:
                      [
                          {
                              "vehicleId": 4,
                              "registrationNo": "301-6243",
                              "province": null,
                              "model": null,
                              "make": null,
                              "parkTagNo": "7790004693",
                              "vehicleType": "CAR",
                              "addedDate": "2017-08-20 12:20:54",
                              "status": 1,
                              "userid": 2953,
                              "corporateId": 1,
                              "tagReferance": "044C0B1A3F3480",
                              "parkingType": "NORMAL",
                              "userFirstName": "Waruni  Arumapperuma Algama",
                              "userLastName": null,
                              "userMobile": null,
                              "userEmail": null,
                              "addedBy": "pt_sadmin",
                              "modifyBy": null,
                              "modifyDate": null,
                              "deviceId": null,
                              "vehicleMake": null
                          }
                      ]
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/vehicle/getPendingVehicles:
        get:
          tags:
          - Public user vehicles
          summary: Get vehicles which are in pending approval
          parameters:

            - in: header
              name: userId
              schema:
                type: number
              required: true

          security: []
          responses:
              '200':
                description: corporate vehicle
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: '#/components/requestBodies/CorpVehicleRequestBody'
                    example:
                      [
                          {
                              "vehicleId": 4,
                              "registrationNo": "301-6243",
                              "province": null,
                              "model": null,
                              "make": null,
                              "parkTagNo": "7790004693",
                              "vehicleType": "CAR",
                              "addedDate": "2017-08-20 12:20:54",
                              "status": 1,
                              "userid": 2953,
                              "corporateId": 1,
                              "tagReferance": "044C0B1A3F3480",
                              "parkingType": "NORMAL",
                              "userFirstName": "Waruni  Arumapperuma Algama",
                              "userLastName": null,
                              "userMobile": null,
                              "userEmail": null,
                              "addedBy": "pt_sadmin",
                              "modifyBy": null,
                              "modifyDate": null,
                              "deviceId": null,
                              "vehicleMake": null
                          }
                      ]
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/vehicle/approveVehicle:
        post:
          tags:
          - Public user vehicles
          summary: approve pending vehicle
          parameters:
          requestBody:
            $ref: '#/components/requestBodies/CorpVehicleRequestBody'
          security: []
          responses:
              '200':
                $ref: '#/components/responses/DefaultSuccessResponse'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/vehicle/rejectVehicle:
        post:
          tags:
          - Public user vehicles
          summary: reject pending vehicle
          parameters:
          requestBody:
            $ref: '#/components/requestBodies/CorpVehicleRequestBody'
          security: []
          responses:
              '200':
                $ref: '#/components/responses/DefaultSuccessResponse'
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'

  /mobile/vehicle/pendingVehiclesByCorporate:
        get:
          tags:
          - Public user vehicles
          summary: Get vehicles which are in pending approval by corporate
          parameters:

            - in: header
              name: corporateId
              schema:
                type: number
              required: true

          security: []
          responses:
              '200':
                description: corporate vehicle
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: '#/components/requestBodies/CorpVehicleRequestBody'
                    example:
                      [
                          {
                              "vehicleId": 4,
                              "registrationNo": "301-6243",
                              "province": null,
                              "model": null,
                              "make": null,
                              "parkTagNo": "7790004693",
                              "vehicleType": "CAR",
                              "addedDate": "2017-08-20 12:20:54",
                              "status": 1,
                              "userid": 2953,
                              "corporateId": 1,
                              "tagReferance": "044C0B1A3F3480",
                              "parkingType": "NORMAL",
                              "userFirstName": "Waruni  Arumapperuma Algama",
                              "userLastName": null,
                              "userMobile": null,
                              "userEmail": null,
                              "addedBy": "pt_sadmin",
                              "modifyBy": null,
                              "modifyDate": null,
                              "deviceId": null,
                          }
                      ]
              '400':
                $ref: '#/components/responses/DefaultErrorResponse'


components:
  requestBodies:
    RegisterMobileUser:
      description: Request data of register mobile user
      content:
        application/json:
          schema:
            type: object
            required:
              - firstName
              - companyCode
              - mobileNo
            properties:
              userId:
                type: integer
                description: unique user id which is used as primary key
              firstName:
                type: string
                description: first name of the user
              lastName:
                type: string
              identificationType:
                type: string
                description: NIC type of user
              identificationValue:
                type: string
                description: NIC number of the user
              email:
                type: string
                description: email of the user
              companyCode:
                type: string
                description: the corporate code of user
              mobileNo:
                type: string
                description: mobile number of the user
              empId:
                type: string
                description: employee id of the user
            example:
              userId: 32
              firstName: "John"
              lastName: "Carter"
              identificationType: "None"
              identificationValue: "4342342342v"
              email: "gfr@gmail.com"
              companyCode: "C001"
              mobileNo: "778990334"
              empId: "E3232"
      required: true

    RegistrationValidationRequest:
      content:
        application/json:
          schema:
            type: object
            required:
              - userId
              - mobileNo
              - tokenNo
            properties:
              userId:
                type: number
                format: integer
                description: Id of the user which was give in previous request
              mobileNo:
                type: string
                description: mobile no of the user
              tokenNo:
                type: string
                description: a token no which was give in previous request
          example:
            userId: 45
            mobileNo: "776589003"
            tokenNo: "DF3232FF"
      required: true

    EmergencyContactBody:
      description: Data body of the emergecy contact of public user
      content:
        application/json:
          schema:
            type: object
            required:
              - firstName
              - companyCode
              - mobileNo
            properties:
              userId:
                type: integer
                description: unique user id which is used as primary key
              fullName:
                type: string
                description: fullName name of the emergency contact
              emergencyMobile:
                type: string
                description: mobile no of the emergency contact
            example:
              userId: 32
              fullName: "Sam smith"
              lastName: "Carter"
              emergencyMobile: "778990334"
      required: true

    AppVersionBody:
      description: App version data body
      content:
        application/json:
          schema:
            type: object
            required:
              - version
              - appType
            properties:
              status:
                type: integer
                description: response status code
              appType:
                type: string
                description: app type (user or operator)
              version:
                type: string
                description: current version of the app
              statusDesc:
                type: string
                description: response status message
            example:
              status: 10
              appType: "PUBLIC"
              version: "1.0.0"
              statusDesc: "Version is Deprecated"
      required: true

    CorporateAddressBody:
      description: Data body of the corporate address
      content:
        application/json:
          schema:
            type: object
            required:
              - addressId
              - addressLine1
              - addressLine2
              - addedDate
              - modifyDate
            properties:
              addressId:
                type: integer
                description: unique address id which is used as primary key
              addressLine1:
                type: string
                description: address line one
              addressLine2:
                type: string
                description: address line two (optional)
              district:
                type: string
              state:
                type: string
              postalCode:
                type: string
              country:
                type: string
              addedBy:
                type: string
                description: added system user's user-name
              addedDate:
                type: string
              modifyBy:
                type: string
                description: modified system user's user-name
              modifyDate:
                type: string
            example:
              addressId: 21
              addressLine1: "No. 40"
              addressLine2: "Nalluruwa"
              district: "panadura"
              state: "western"
              postalCode: "23233"
              country: "sri lanka"
              addedBy: "admin"
              addedDate: "2019-01-01"
              modifyBy: "admin2"
              modifyDate: "2019-04-11"
      required: true

    StationHoursBody:
      description: Data body of the station operation hours
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StationHoursBody'
          example:

      required: true

    StationBody:
      description: Data body of the station
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ParkStationBody'
          example:
            addedBy: admin,
            addedDate: today,
            address1: $('#address-line1OfAddNewPakrkingStation').val(),
            address2: $('#address-line2OfAddNewPakrkingStation').val(),
            billContact: $('#billContactMobileOfAddNewPakrkingStation').val(),
            billContactEmail: $('#billContactEmailOfAddNewPakrkingStation').val(),
            billContactName: $('#billContactNameOfAddNewPakrkingStation').val(),
            city: $('#cityTextOfAddNewPakrkingStation').val(),
            commission: $('#commissionOfAddNewPakrkingStation').val(),
            contractEnd: $('#contractEndOfAddNewPArkStation').val()+" "+d.getHours()+":"+d.getMinutes()+":"+d.getSeconds(),
            contractStart: $('#contractStartOfAddNewPArkStation').val()+" "+d.getHours()+":"+d.getMinutes()+":"+d.getSeconds(),
            country: $('#countryComboOfAddNewPakrkingStation').val(),
            district: $('#districtTextOfAddNewPakrkingStation').val(),
            latitude: $('#latitudeTextOfAddNewPakrkingStation').val(),
            longitude: $('#longitudeTextOfAddNewPakrkingStation').val(),
            operationHours: {
                closeFRITime: $('#closeFRITime').val()+":00",
                closeMONTime: $('#closeMONTime').val()+":00",
                closeSATTime: $('#closeSATTime').val()+":00",
                closeSUNTime: $('#closeSUNTime').val()+":00",
                closeTHRSTime: $('#closeTHRSTime').val()+":00",
                closeTUESTime: $('#closeTUESTime').val()+":00",
                closeWEDTime: $('#closeWEDTime').val()+":00",
                openFRITime: $('#openFRITime').val()+":00",
                openMONTime: $('#openMonTime').val()+":00",
                openSATTime: $('#openSATTime').val()+":00",
                openSUNTime: $('#openSUNTime').val()+":00",
                openTHRSTime: $('#openTHRSTime').val()+":00",
                openTUESTime: $('#openTUESTime').val()+":00",
                openWEDTime: $('#openWEDTime').val()+":00",
            }
            postalCode: $('#postalCodeTextOfAddNewPakrkingStation').val(),
            provideTchName: providers[$('#parkProviderComboOfAddNewPakrkingStation').prop('selectedIndex')-1].provideTchName,
            providerBRN: providers[$('#parkProviderComboOfAddNewPakrkingStation').prop('selectedIndex')-1].providerBRN,
            providerId: providers[$('#parkProviderComboOfAddNewPakrkingStation').prop('selectedIndex')-1].providerId,
            stationCode: $('#stationCodeTextOfAddNewPakrkingStation').val(),
            stationEmail: $('#stationEmailOfAddNewPakrkingStation').val(),
            stationMobile: $('#stationMobileOfAddNewPakrkingStation').val(),
            stationName: $('#stationNameOfAddNewPakrkingStation').val(),
            stationTechEmail: $('#stationTechEmailOfAddNewPakrkingStation').val(),
            stationTechMobile: $('#stationTechMobileOfAddNewPakrkingStation').val(),
            stationTechName: $('#stationTechNameOfAddNewPakrkingStation').val(),
            unitPrice: $('#unitPriceOfAddNewPakrkingStation').val(),
            webaddress: $('#webAddressOfAddNewPakrkingStation').val(),
            status: 1
      required: true

    UserAddressRequest:
      description: Data body of the station
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAddressBody'

    CorporateBody:
      description: Data body of the corporate
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorporateBody'

    CorporateStationBody:
      description: Data body of the corporate station
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorporateStationBody'

    ParkProviderBody:
      description: Data body of the park provider
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ParkProviderBody'

    StationLevelBody:
      description: Data body of the park station level
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StationLevelBody'

    StationGroupBody:
      description: Data body of the park station group
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StationGroupBody'
          example:
            {
              "corporateId": 23,
              "createdBy": admin,
              "createdDate": today,
              "groupDescription": $('#groupDescriptionOfAddNewParkStationGroup').val(),
              "groupName": $('#groupNameOfAddNewParkStationGroup').val(),
              "stations": [21,32,32]
            }

    CurrentLocationRequestBody:
          description: Data body of the current location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentLocationBody'
              example: {
                       	"currentLongitude": 21.1,
                       	"currentLatitude":22.2,
                       	"deviceId":"F32323",
                       	"userId":12,
                       	"radias":43.3
                       }

    UserStationGroupBody:
          description: Data body of the user-station group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStationGroup'
              example:
                {
                    addedBy: admin,
                    addedDate: 2010-04-11 21:00:12,
                    modifyBy: admin,
                    modifyDate: 2019-04-11 21:00:12,
                    stationGroup: {
                        corporateId: 12,
                        stationGroupId: 22
                    },
                    stationUserGroupId: 0,
                    status: 1,
                    userGroup: {
                        corporateId: 12,
                        userGroupId: 33
                    }
                }

    ParkTagBody:
      description: the data body of the park tag
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ParkTagBody'
          example:
            {
                "tagId": 1,
                "addedBy": admin,
                "addedDate": 2010-01-01 21:00:00,
                "corporateId": 23,
                "status": "CREATED",
                "tagSerial": 773232302,
                "tagUid": 32DF32323GFEE
            }

    StationDeviecBody:
          description: the data body of the station device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationDeviceBody'
              example:
                {
                  addedDate: 2010-01-01 12:00:00,
                  addedby: admin,
                  contactMobile: 778967336,
                  contactName: Tharindu,
                  deviceCode: D3232,
                  deviceId: 0,
                  deviceProvider: ProVider,
                  deviceSerial: 3232gfdegf3443fvv43432432fgfege,
                  emei: E323D323323GGT3232,
                  make: Samsung,
                  mobileNumber: 778989444,
                  model: A310F,
                  password: 12345,
                  stationId: 21,
                  status: 1,
                  techinicalContactMobile: 778989444,
                  technicalContact: MyCon,
                  userName: super
                }

    StationTransactionBody:
          description: the data body when park in and out
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationParkTransactionBody'
              example:
                {
                    transactionId: 1,
                    tagReferance: F3232FRFERF3243,
                    dateTime: 2010-01-01 12:00:00,
                    transactionType: IN,
                    chargeAmount: 200.50,
                    availableSlots: 10,
                    availableReserveSlots: 5
                }

    ApproveUserRequest:
              description: the data body of user when approving/rejecting
              content:
                application/json:
                  schema:
                    properties:
                      userId:
                        type: number
                        description: pending user's user DB ID
                      corporateId:
                        type: number
                        description: pending user's corporate DB ID
                      userStatus:
                        type: string
                        description: the status about to set (Acive/Blocked)
                  example:
                    {
                        "userId": 32,
                        "corporateId": 4,
                        "userStatus": "Acive"
                     }
    AdminUserBody:
              description: the data body of the system admin
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/AdminUserBody'
                  example:
                    {
                      "userId":0,
                      "userName": $('#userNameOfAddNewSystemUser').val(),
                      "password": $('#passordOfAddNewSystemUser').val(),
                      "fullName": $('#fullNameOfAddNewSystemUser').val(),
                      "email": $('#emailOfAddNewSystemUser').val(),
                      "status": 1,
                      "addedBy": admin,
                      "addedDate": 2010-01-01 12:00:00,
                      "modifyBy": sadmin,
                      "modifyDate": 2019-01-01 12:00:00,
                      "userRoles": SYS_ADMIN
                    }
    UserGroupBody:
              description: the data body of the corp user group
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/UserGroup'
                  example:
                    {
                        "corporateId": 3,
                        "createdBy": sadmin,
                        "createdDate": 2010-01-01 12:00:00,
                        "groupName": executives group,
                        "modifyDate": 2019-01-01 12:00:00,
                        "modufyBy": admin,
                        "status": 2,
                        "userGroupId": 32,
                        users: [21,43,3,53]
                    }

    CorpUserRequestBody:
              description: the data body of the corp user
              content:
                application/json:
                  schema:
                    properties:
                      address:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserAddressBody'
                      mobileUser:
                        type: array
                        items:
                          $ref: '#/components/schemas/CorpUserDetailBody'
                      userGroupId:
                        type: number
                      vehicles:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserVehicleBody'
                    example:
                      {
                          "address": [{
                              "line1": gtrgtr,
                              "line2": gtrgrtgr,
                              "city": gtrgrtg,
                              "country": gtgrtg,
                              "postalCode": 54345345,
                              "province": hghgrhrg
                          }],
                          "mobileUser": {
                              "addedUser": admin,
                              "budgetReferance": G$4343FFDF,
                              "createdDate": 2010-12-21 12:12:12,
                              "department": Feeg,
                              "email": gfrg@frdf,
                              "firstName": vfgr,
                              "identificationValue": 3232332323v,
                              "lastName": fgffgge,
                              "mobile": 42243434,
                              "otherReferance": F3232FDFD,
                              "empId":E232323
                          },
                          "userGroupId": 32,
                          "vehicles":[
                            {
                                "model": F3232,
                                "parkTagNo": 88332322,
                                "province": Western,
                                "registrationNo": FG-3233,
                                "vehicleMake": Mitsubishi,
                                "vehicleType": Car,
                                "parkingType": NORMAL,
                                "tagReferance": FFEDF323VFRF3232,
                                "status":1
                            }
                          ]
                      }

    CorpVehicleRequestBody:
          description: the data body of the corp vehicle
          content:
            application/json:
               schema:
                $ref: '#/components/schemas/UserVehicleBody'
               example:
                {
                    "model": F3232,
                    "parkTagNo": 88332322,
                    "province": Western,
                    "registrationNo": FG-3233,
                    "vehicleMake": Mitsubishi,
                    "vehicleType": Car,
                    "parkingType": NORMAL,
                    "tagReferance": FFEDF323VFRF3232,
                    "make": Mitsubishi,
                    "userid": 12,
                    "status":1
                }
  responses:
    DefaultSuccessResponse:
      description: Operation Successful default response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DefaultSuccess'
          example:
            status: 200
            statusDesc: string

    DefaultErrorResponse:
      description: Operation Failed default response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DefaultError'


    RegisterFirstResponse:
      description: Operation Successful registered response
      content:
        application/json:
          schema:
            properties:
              userId:
                type: number
              sessionKey:
                type: string

    RegisterValidateAuthCodeResponse:
      description: The response of when validating auth code in register
      content:
        application/json:
          schema:
            properties:
              status:
                type: number
              statusDesc:
                type: string

    StationAvailabilityBody:
          description: Availability Details of the station
          content:
            application/json:
              schema:
                properties:
                  noOfSlots:
                    type: number
                  noOfReserverd:
                    type: number
                  noOfUsedSlots:
                    type: number
                  noOfReserverdUsed:
                    type: number
                  station:
                    $ref: '#/components/schemas/ParkStationBody'

    UserGroupByStationResponse:
      description: User group details with user-stations by station group
      content:
        application/json:
          schema:
            properties:
              userStationGroupId:
                type: number

            allOf:
              - $ref: '#/components/schemas/UserGroup'

    ParkedVehicleDetalResponse:
              description: the data body of the vehicle with its user
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ParkedVehicleDetailsBody'
                  example:

    CorpUserDetailResponse:
      description: the data body of the vehicle with its user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorpUserDetailBody'
          example:

#    StationGroupDetailResponse:
#      description: Stations with their group
#      content:
#        application/json:
#          schema:
#            properties:
#              stationsDetail:
#                type: array
#                items:
#                  $ref: '#/components/schemas/ParkStationBody'
#              corporateStationDTOS:
#                type: array
#                items:
#                  $ref: '#/components/schemas/CorporateStationBody'
#

  parameters:
    RequestingUserId:
      in: path
      name: user_id
      required: true
      schema:
        type: string
      description: The requesting user's employee id

  schemas:
    DefaultError:
      type: object
      properties:
        status:
          type: integer
          description: Status of the request
        statusDesc:
          type: string
          description: Reason for the particular status
      example:
        status: 400
        statusDesc: Operation Failed

    DefaultSuccess:
      type: object
      properties:
        status:
          type: integer
          description: Status of the request
          default: 200
        statusDesc:
          type: string
          description: Operation status description
      example:
        status: 200
        statusDesc: Operation Successful

    UserAddressBody:
      type: object
      properties:
        userId:
          type: integer
          description: ID of the User
          default: 0
        addressId:
          type: integer
          description: Address ID of the User
        line1:
          type: string
        line2:
          type: string
        city:
          type: string
        district:
          type: string
        province:
          type: string
        postalCode:
          type: string
        country:
          type: string
      example:
        userId: 23
        addressId: 1
        addressType: "Single"
        line1: "nalluruwa"
        line2: "bodhirukkarama road"
        city: "panadura"
        district: "kalutara"
        province: "western"
        postalCode: "D323"
        country: "sri lanka"


    CorporateBody:

          type: object
          properties:
                corporateId:
                  type: integer
                  description: unique corporate id which is used as primary key
                corporateCode:
                  type: string
                  description: the custom code of the corporate
                corporateName:
                  type: string
                  description: name of the corporate
                address:
                  type: array
                  description: List of addresses owned by corporate
                  items:
                    $ref: '#/components/requestBodies/CorporateAddressBody'
                webAddress:
                  type: string
                  description: web address  of the corporate
                email:
                  type: string
                  description: email of the orporte
                contactNo:
                  type: string
                  description: corporate contact number
                billingContact:
                  type: string
                  description: billing contact name
                billMobile:
                  type: string
                  description: billing contact mobile
                billEmail:
                  type: string
                  description: billing contact email
                techContact:
                  type: string
                  description: technical contact name
                techEmail:
                  type: string
                  description: technical contact email of corporate
                brc:
                  type: string
                  description: corporate business registration number
                techMobile:
                  type: string
                  description: technical contact mobile
                contractStart:
                  type: string
                  description: the contract statr date
                contractEnd:
                  type: string
                  description: the contract end date
                status:
                  type: integer
                  description: corporate active status
                addedBy:
                  type: string
                  description: the added system user
                addedDate:
                  type: string
                  description: added date of the corporate
                modifyBy:
                  type: string
                  description: the updated system user
                modifyDate:
                  type: string
                  description: modified date id of the corporate
                photoPath:
                  type: string
                  description: the image url of corporate

          example:
                corporateId: 12
                corporateCode: "C002"
                corporateName: "Dialog axiata"
                address: [{
                  addressId: 21,
                  addressLine1: "No. 40",
                  addressLine2: "Nalluruwa",
                  district: "panadura",
                  state: "western",
                  postalCode: "23233",
                  country: "sri lanka",
                  addedBy: "admin",
                  addedDate: "2019-01-01",
                  modifyBy: "admin2",
                  modifyDate: "2019-04-11",
                },
                {
                  addressId: 22,
                  addressLine1: "No. 20",
                  addressLine2: "Pinwatte",
                  district: "panadura",
                  state: "western",
                  postalCode: "232323",
                  country: "sri lanka",
                  addedBy: "sadmin",
                  addedDate: "2018-01-01",
                  modifyBy: "sadmin2",
                  modifyDate: "2019-04-11",
                }]
                webAddress: "wwe.com"
                email: "ger@gmail.com"
                contactNo: "773289774"
                billingContact: "biller"
                billMobile: "773289774"
                billEmail: "bill@gmail.com"
                techContact: "techer"
                techEmail: "tech@msn.com"
                brc: "B22323"
                techMobile: "773289774"
                contractStart: "2019-04-11"
                contractEnd: "2020-04-11"
                status: 1
                addedBy: "super-user"
                addedDate: "2019-04-11 21:00:12"
                modifyBy: "sadmin"
                modifyDate: "2019-04-11 21:00:12"
                photoPath: "https://parktags.net:8448/Parktagservices/download/photoName"

    CorporateAddressBody:
      type: object
      properties:

        addressId:
          type: integer
          description: Address ID
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        district:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        addedBy:
          type: string
        addedDate:
          type: string
        modifyBy:
          type: string
        modifyDate:
          type: string
      example:
        addressId: 1
        addressLine1: "nalluruwa"
        addressLine2: "bodhirukkarama road"
        city: "panadura"
        district: "kalutara"
        state: "western"
        postalCode: "D323"
        country: "sri lanka"
        addedBy: "sadmin"
        addedDate: "2010-01-01"
        modifyBy: "admin"
        modifyDate: "2019-01-01"

    CorporateStationBody:
      type: object
      properties:
        corporateStationId:
          type: number
          description: unique id of the corporate station
        stationCode:
          type: string
          description: the station code
        noOfSlots:
          type: number
        noOfReserverd:
          type: number
        noOfUsedSlots:
          type: number
        noOfReserverdUsed:
          type: number
        stationId:
          type: number
        stationName:
          type: string
        addedBy:
          type: string
          description: added system user
        addedDate:
          type: string
          description: added date
        modifyBy:
          type: string
          description: modified system user
        status:
          type: integer
          description: active status
        providerName:
          type: string
          description: station provider name
        corporateName:
          type: string
          description: corporate name of the station
      example:
        corporateStationId: 21
        stationCode: ST001
        noOfSlots: 40
        noOfReserverd: 10
        noOfUsedSlots: 5
        noOfReserverdUsed: 3
        corporateId: 11
        stationId: 10
        stationName: DLG Stations
        addedBy: sadmin
        addedDate: 2010-01-01
        modifyBy: admin
        modifyDate: 2019-01-01
        status: 1
        providerName: Dialog
        corporateName: Dialog axiata

    ParkProviderBody:
      type: object
      properties:
        providerId:
          type: number
          description: unique id of the park provider
        providerCode:
          type: string
          description: the provider code
        providerName:
          type: string
        prividerBRN:
          type: string
          description: provider's business registration number
        address1:
          type: string
        address2:
          type: string
        city:
          type: integer
        district:
          type: string
        postalCode:
          type: string
        country:
          type: string
        webaddress:
          type: string
        providerEmail:
          type: string
        providerMobile:
          type: string
        billContact:
          type: string
          description: the provider's bill contact number
        billContactName:
          type: string
          description: the provider's bill contact name
        billContactEmail:
          type: string
          description: the provider's bill contact email
        provideTchName:
          type: string
          description: the provider's tech contact name
        providerTechMobile:
          type: string
          description: the provider's tech contact number
        contractStart:
          type: string
          description: contract start date
        contractEnd:
          type: string
          description: contract start date
        status:
          type: integer
          description: active status
        billContactMobile:
          type: string
          description: the provider's bill contact number
        addedBy:
          type: string
          description: added system user
        addedDate:
          type: string
        modifyBy:
          type: string
          description: modified ystem user
        modifyDate:
          type: string
      example:
        providerId: 22
        providerCode: P0202
        providerName: Silva Parker
        prividerBRN: B3232
        address1: No.40, Pinwatta
        address2: Nalluruwa
        city: Panadura
        district: Kalutara
        postalCode: 33231P
        country: Sri lanka
        webaddress: wwe.com
        providerEmail: wwe@gmail.com
        providerMobile: 774390882
        billContact: 774390882
        billContactName: Bill
        billContactEmail: wwe@gmail.com
        provideTchName: Tech
        providerTechMobile: 774390882
        contractStart: "2010-01-01 12:00:00"
        contractEnd: "2019-01-01 12:00:00"
        status: 1
        billContactMobile: 774389773
        addedBy: admin
        addedDate: "2010-01-01 12:00:00"
        modifyBy: sadmin
        modifyDate: "2010-01-01 12:00:00"

    ParkStationBody:
      type: object
      properties:
              stationId:
                type: number
                description: the unique id of station
              stationCode:
                type: string
                description: the unique code of station
              stationName:
                type: string
                description: the station's name
              providerBRN:
                type: string
                description: the business registration no of the station
              address1:
                type: string
              address2:
                type: string
              city:
                type: string
              district:
                type: string
              postalCode:
                type: string
              country:
                type: string
              webaddress:
                type: string
              stationMobile:
                type: string
              billContact:
                type: string
                description: billing contact number
              billContactName:
                type: string
                description: bill contact name
              provideTchName:
                type: string
                description: statioon provider's tech name
              stationTechMobile:
                type: string
                description: technical contact mobile
              stationTechEmail:
                type: string
                description: technical contact email
              contractStart:
                type: string
                description: the contract start date
              contractEnd:
                type: integer
                description: the contract end date
              operationHours:
                $ref: '#/components/schemas/StationHoursBody'
              unitPrice:
                type: number
                description: station parking price
              commission:
                type: number
                description: station park commission
              providerId:
                type: number
                description: station providers unique id
              latitude:
                type: number
                description: station location's latitide
              longitude:
                type: number
                description: station location's longitude
              status:
                type: integer
                description: active status
              addedBy:
                type: string
                description: added  system user name
              addedDate:
                type: string
              modifyBy:
                type: string
                description: modified  system user name
              modifyDate:
                type: string
              availableSlots:
                type: number
                description: no of available slot count
              providerName:
                type: string
                description: station provider's name
              noOfSlots:
                type: number
                description: no of corporate station slots
              noOfReserverd:
                type: number
                description: no of corporate station reserved slots
              noOfUsedSlots:
                type: number
                description: no of used corporate station slots
              noOfReserverdUsed:
                type: number
                description: no of userd corporate station reserved slots
              totalSlots:
                type: number
                description: no of total corporate station slots

      example:
#        status: 200
#        statusDesc: Operation Successful

    StationHoursBody:
      type: object
      properties:
              userId:
                type: integer
                description: unique user id which is used as primary key
              openMONTime:
                type: string
              closeMONTime:
                type: string
              openTUESTime:
                type: string
              closeTUESTime:
                type: string
              openWEDTime:
                type: string
              closeWEDTime:
                type: string
              openTHRSTime:
                type: string
              closeTHRSTime:
                type: string
              openFRITime:
                type: string
              closeFRITime:
                type: string
              openSATTime:
                type: string
              closeSATTime:
                type: string
              openSUNTime:
                type: string
              closeSUNTime:
                type: string

    StationLevelBody:
      type: object
      properties:
              levelid:
                type: integer
                description: unique level id which is used as primary key
              levelName:
                type: string
              parallel:
                type: number
                description: no of parellel slots
              Perpendicular:
                type: number
                description: no of Perpendicular slots
              angle:
                type: number
                description: no of angle slots
              accessible:
                type: number
                description: no of accessible slots
              automated:
                type: number
                description: no of automated slots
              carport:
                type: number
                description: no of carport slots
              total:
                type: number
                description: no of total slots
              status:
                type: number
                description: active status
              addedBy:
                type: string
                description: added system user's user-name
              addedDate:
                type: string
              modifyBy:
                type: string
                description: modified system user's user-name
              modifyDate:
                type: string
              stationId:
                type: number

    StationGroupBody:
      type: object
      properties:
          stationGroupId:
            type: integer
            description: unique group id which is used as primary key
          groupName:
            type: string
          stations:
            type: array
            items:
              type: number
            description: stationIds
          createdBy:
            type: string
            description: added system user-name
          createdDate:
            type: string
          modifyBy:
            type: string
            description: modified system user-name
          modifyDate:
            type: string
          corporateId:
            type: number
            description: corporate id
          status:
            type: integer
            description: active status

    CurrentLocationBody:
        type: object
        properties:
          currentLongitude:
            type: number
            description: longitude of current location
          currentLatitude:
            type: number
            description: latitude of current location
          deviceId:
            type: string
            description: User devide serial
          userId:
            type: number
            description: user's id
          radias:
            type: number
            description: radius
        example:

    StationHeaderBody:
        type: object
        properties:
          stationId:
            type: number
            description: id of the station
          stationCode:
            type: string
          brn:
            type: string
            description: station's Business reg number
          name:
            type: string
            description: station name
          address:
            $ref: '#/components/schemas/StationHeaderAddressBody'
          longitude:
            type: string
          latitude:
            type: string
          webAddress:
            type: string
          email:
            type: string
            description: station's Business reg number
          contactNo:
            type: string
            description: station name
          noOfFreeSlots:
            type: number
            description: id of the station
          status:
            type: integer
            description: active status of the station
        example:

    StationHeaderAddressBody:
          type: object
          properties:
            userId:
              type: number
              description: id of the user
            addressId:
              type: number
            addressType:
              type: string
            line1:
              type: string
              description: address line 1
            line2:
              type: string
              description: address line 2
            city:
              type: string
              description: city of the station
            district:
              type: string
            province:
              type: string
            postalCode:
              type: string
            country:
              type: string
          example:

    NearestStationsBody:
          type: object
          properties:
            isSuccess:
              type: boolean
              description: success status
            statusDesc:
              type: string
              description: success status description
            parkingStationResults:
              $ref: '#/components/schemas/StationHeaderBody'
          example:

    UserStationGroup:
          type: object
          properties:
            addedBy:
              type: string
              description: added system user's user name
            addedDate:
              type: string
            modifyBy:
              type: string
              description: modified system user-name
            modifyDate:
              type: string
            stationGroup:
              $ref: '#/components/schemas/StationGroupBody'
            stationUserGroupId:
              type: integer
              description: station-user group unique ID
            status:
              type: integer
              description: active status
            userGroup:
              properties:
                corporateId:
                  type: integer
                  description: corporate's ID
                userGroupId:
                  type: integer
                  description: the user group's ID which adds to station group
              example: {
                    corporateId: 21,
                    userGroupId: 23
                }
          example:

    UserGroup:
          type: object
          properties:
            userGroupId:
              type: string
              description: user group's db id
            groupName:
              type: string
            groupDesc:
              type: string
              description: description about the group
            users:
              type: array
              items:
                  example: [21,2,43,22]
            createdBy:
              type: string
              description: added system user
            createdDate:
              type: string
            modufyBy:
              type: string
              description: modified system user
            modifyDate:
              type: string
            corporateId:
              type: number
              description: corporate's db id
            status:
              type: integer
              description: active status
          example:


    ParkTagBody:
          type: object
          properties:
            tagId:
              type: number
              description: park tag's db id
            tagSerial:
              type: string
              description: tag serial of the card
            tagUid:
              type: string
              description: tag UID
            status:
              type: string
              description: tag status in string ( "CREATED","ASSIGN","DELETED" )
            addedBy:
              type: string
              description: added system user
            addedDate:
              type: string
            modifyBy:
              type: string
              description: modified system user
            modifyDate:
              type: string
            corporateId:
              type: number
              description: corporate's db id

          example:

    StationDeviceBody:
          type: object
          properties:
            deviceId:
              type: number
              description: device's db id
            deviceSerial:
              type: string
              description: device serial
            userName:
              type: string
              description: username for device
            password:
              type: string
              description: password for device
            addedby:
              type: string
              description: added system user
            addedDate:
              type: string
            modifyBy:
              type: string
              description: modified system user
            modifyDate:
              type: string
            chargeAmount:
              type: number
              description: charging amount by device
            status:
              type: integer
              description: active status of the device
            contactName:
              type: string
              description: contact name of the device
            contactMobile:
              type: string
              description: contact mobile no of the device
            stationId:
              type: number
              description: station's id of the device in

            deviceCode:
              type: string
            make:
              type: string
              description: manufacturer of the device
            model:
              type: string
              description: device model
            emei:
              type: string
              description: imei no of device
            mobileNumber:
              type: string
            deviceProvider:
              type: string
              description: device provider name
            technicalContact:
              type: string
              description: device tech contact name
            techinicalContactMobile:
              type: string
              description: device tech contact no
          example:

    StationParkTransactionBody:
          type: object
          properties:
            transactionType:
              type: string
              description: parking type whether IN or OUT
            transactionId:
              type: number
              description: transaction object DB ID
            tagReferance:
              type: string
              description: parking vehicle tag's serial
            dateTime:
              type: string
              description: parking date and time
            chargeAmount:
              type: number
              description: park charge amount
            availableSlots:
              type: string
              description: station's current available normal slots
            availableReserveSlots:
              type: string
              description: station's current available reserved slots

    ParkedVehicleDetailsBody:
          type: object
          properties:
            vehicleId:
              type: number
              description: vehicle's DB ID
            registrationNo:
              type: string
              description: vehicle registration number
            model:
              type: string
              description: vehicle model
            make:
              type: string
              description: vehicle make
            vehicleType:
              type: string
              description: vehicle type
            userFirstName:
              type: string
              description: vehicle user's first name
            userLastName:
              type: string
              description: vehicle user's last name
            userMobile:
              type: string
              description: vehicle user's mobile no
            userEmail:
              type: string
              description: vehicle user's email
            emergencyMobile:
              type: string
              description: vehicle user's emergency contact no
            fullName:
              type: string
              description: vehicle user's emergency contact name

    CorpUserDetailBody:
          type: object
          properties:
            userId:
              type: number
              description: user's DB ID
            firstName:
              type: string
              description: user first name
            lastName:
              type: string
              description: user last name
            identificationType:
              type: string
              description: user NIC type
            identificationValue:
              type: string
              description: user NIC value
            mobile:
              type: string
              description: user telephone no
            email:
              type: string
              description: user email
            department:
              type: string
              description: user's department
            budgetReferance:
              type: string
            otherReferance:
              type: string
            status:
              type: string
              description: user's current status of the system
            empId:
              type: string
              description: user's associated employee ID
            approvedUser:
              type: string
              description: approved system user-name
            approvedDate:
              type: string
            createdDate:
              type: string
              description: user added date to the system
            addedUser:
              type: string
              description: added system user-name
            modifiedDate:
              type: string
              description: vehicle user's email
            modifyUser:
              type: string
              description: vehicle user's emergency contact no
            corporateId:
              type: integer
              description: user's corporate's DB ID
            userGroupName:
              type: string
              description: user's group name

    AdminUserBody:
          type: object
          properties:
            userId:
              type: number
              description: admin user's DB ID
            userName:
              type: string
              description: user-name for admin
            password:
              type: string
              description: password of admin
            fullName:
              type: string
              description: full name of user
            status:
              type: string
              description: user's current status of the system
            addedBy:
              type: string
              description: added system user-name
            addedDate:
              type: string
            modifyBy:
              type: string
              description: modified system user-name
            modifyDate:
              type: string
              description: user modified date to the system
            userRoles:
              type: string
              description: user's system role


    UserVehicleBody:
          type: object
          properties:
            model:
              type: string
              description: vehicle model
            parkTagNo:
              type: string
              description: park tag's serial
            province:
              type: string
            registrationNo:
              type: string
            vehicleMake:
              type: string
            vehicleType:
              type: string
              description: vehicle type
            parkingType:
              type: string
              description: park type (NORMAL/RESERVED)
            tagReferance:
              type: string
              description: park tag uid
            status:
              type: integer
              description: active status
            addedBy:
              type: string
            addedDate:
              type: string
            userid:
              type: string
              description: vehicle type
            make:
              type: string
              description: park type (NORMAL/RESERVED)

          example:
              {
                  "model": F3232,
                  "parkTagNo": 88332322,
                  "province": Western,
                  "registrationNo": FG-3233,
                  "vehicleMake": Mitsubishi,
                  "vehicleType": Car,
                  "parkingType": NORMAL,
                  "tagReferance": FFEDF323VFRF3232,
                  "make": Mitsubishi,
                  "userid": 12,
                  "status":1
              }

servers:
  - description: SwaggerHub API Auto Mocking
    url: 'parktags.net:8443/ParkTagsServices'
  - url: 'parktags.net:8443/ParkTagsServices'